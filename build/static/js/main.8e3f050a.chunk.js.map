{"version":3,"sources":["components/contentsComponent/filterComponents/filterBtns/FilterBtns.jsx","components/contentsComponent/filterComponents/FilterBar.jsx","components/contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/MenuBox.jsx","components/contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/TitleBox.jsx","components/contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/UserIcon.jsx","components/contentsComponent/videoBox/videoSummary/videoExplanaion/VideoExplanaion.jsx","components/contentsComponent/videoBox/videoSummary/VideoSummary.jsx","components/contentsComponent/videoBox/VideoBox.jsx","components/contentsComponent/ContentsBox.jsx","components/headerComponents/headerLogo/headerLogoMainLogo/HeaderLogoMainLogo.jsx","components/headerComponents/headerLogo/headerLogoOpenMenu/HeaderLogoOpenMenu.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/hiddenMenuGuideHome/hiddenMenuAboutGyutube/HiddenMenuAboutGyutube.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/hiddenMenuGuideHome/hiddenMenuHome/HiddenMenuHome.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/hiddenMenuGuideHome/hiddenMenuPreference/HiddenMenuPreference.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/hiddenMenuGuideHome/hiddenMenuSettings/HiddenMenuSettings.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/hiddenMenuGuideHome/hiddenMenuSubscription/HiddenMenuSubscription.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/hiddenMenuGuideHome/hiddenMenuCopyRight/HiddenMenuCopyRight.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/hiddenMenuGuideHome/HiddenMenuGuideHome.jsx","components/headerComponents/headerLogo/headerLogoHiddenMenu/HeaderLogoHiddenMenu.jsx","components/headerComponents/headerLogo/HeaderLogo.jsx","components/headerComponents/headerSearch/headerSearchForm/headerSearchBtn/HeaderSearchBtn.jsx","components/headerComponents/headerSearch/headerSearchForm/headerSearchKeyboard/VirtualKeyboard.jsx","components/headerComponents/headerSearch/headerSearchForm/headerSearchKeyboard/HeaderSearchKeyboard.jsx","components/headerComponents/headerSearch/headerSearchForm/HeaderSearchForm.jsx","components/headerComponents/headerSearch/headerSearchMic/HeaderSearchMic.jsx","components/headerComponents/headerSearch/HeaderSearch.jsx","components/headerComponents/headerBtns/headerUserInfo/headerUserInfoDetails/headerUserInfoDetailsAccount/HeaderUserInfoDetailsAccount.jsx","components/headerComponents/headerBtns/headerUserInfo/HeaderUserInfoIcon.jsx","components/headerComponents/headerBtns/headerUserInfo/headerUserInfoDetails/headerUserInfoDetailsHeader/HeaderUserInfoDetailsHeader.jsx","components/headerComponents/headerBtns/headerUserInfo/headerUserInfoDetails/headerUserInfoDetailsMode/HeaderUserInfoDetailsMode.jsx","components/headerComponents/headerBtns/headerUserInfo/headerUserInfoDetails/headerUserInfoDetailsSettings/HeaderUserInfoDetailsSettings.jsx","components/headerComponents/headerBtns/headerUserInfo/headerUserInfoDetails/HeaderUserInfoDetails.jsx","components/headerComponents/headerBtns/headerUserInfo/HeaderUserInfo.jsx","components/headerComponents/headerBtns/headerBtnsAddVideo/HeaderAddVideo.jsx","components/headerComponents/headerBtns/headerBtnsMenu/HeaderBtnsMenu.jsx","components/headerComponents/headerBtns/headerBtnsAlarm/HeaderBtnsAlarm.jsx","components/headerComponents/headerBtns/HeaderBtns.jsx","components/headerComponents/Header.jsx","components/navigatorComponents/navigatorCompass/NavigatorCompass.jsx","components/navigatorComponents/navigatorHome/NavigatorHome.jsx","components/navigatorComponents/navigatorSubscription/NavigatorSubscription.jsx","components/navigatorComponents/navigatorStorage/NavigatorStorage.jsx","components/navigatorComponents/Navigator.jsx","components/Main.jsx","components/playingPage/primaryComponents/videoInfo/VideoTitle.jsx","components/playingPage/primaryComponents/videoInfo/videoDetails/reportAndScripts/ReportAndScripts.jsx","components/playingPage/primaryComponents/videoInfo/videoDetails/VideoBtns.jsx","components/playingPage/primaryComponents/videoInfo/videoDetails/ViewAndDate.jsx","components/playingPage/primaryComponents/videoInfo/VideoInfo.jsx","components/playingPage/primaryComponents/videoMeta/videoMetaDetails/VideoUploader.jsx","components/playingPage/primaryComponents/videoMeta/videoMetaDetails/VideoUploaderArticle.jsx","components/playingPage/primaryComponents/videoMeta/VideoMeta.jsx","components/playingPage/primaryComponents/videoComments/videoCommentsContent/pinned/Pinned.jsx","components/playingPage/primaryComponents/videoComments/videoCommentsContent/commentLikeBtns/CommentLikeBtns.jsx","components/playingPage/primaryComponents/videoComments/videoCommentsContent/VideoCommentsContent.jsx","components/playingPage/primaryComponents/videoComments/videoCommentsHeader/VideoCommentsHeader.jsx","components/playingPage/primaryComponents/videoComments/videoCommentsLeaveComment/VideoCommentsLeaveComment.jsx","components/playingPage/primaryComponents/videoComments/VideoComments.jsx","components/playingPage/asideComponents/NextVideoList.jsx","components/routes/Playing.jsx","styles/GlobalStyle.jsx","App.js","styles/theme.js","index.js"],"names":["ShowCase","styled","div","BtnsWrap","props","theme","mobile","moveX","barWidth","tablet","StyledBtn","button","FilterBtns","setCheckTheme","useState","selectedBtn","setSelectedBtn","preferredThemes","UserData","users","preferredTheme","onClickBtn","e","btnValue","target","innerText","className","onClick","map","FilterBarWrap","ArrowWrap","FilterBar","setMoveX","setBarWidth","barRef","useRef","useEffect","current","offsetWidth","ref","prevMoveX","MenuBoxWrap","MenuBox","memo","TitleBoxWrap","TitleWrap","UserNameWrap","ViewsWrap","TitleBox","videoData","views","videoViews","to","videoNo","videoTitle","mainTitle","userName","parseInt","now","Date","thisYear","getFullYear","thisMonth","getMonth","today","getDate","yearGap","videoUploadDate","split","monthGap","dateGap","setYears","UserIconWrap","UserIcon","commenters","src","Object","keys","length","process","uploader","find","user","userId","userImageUrl","setUserImagePath","alt","VideoExplanationWrap","VideoExplanaion","VideoList","li","VideoWrap","VideoSummary","video","isPlaying","setIsPlaying","videoRef","play","pause","currentTime","onMouseEnter","onMouseOut","muted","VideoBoxWrap","ul","VideoBox","checkTheme","filter","includes","ContentsBoxWrap","article","ContentsBox","HeaderLogoWrap","HeaderLogoMainLogo","setSearchedByKeyword","HeaderLogoOpenMenu","willBeShown","setWillBeShown","HiddenMenuAboutGyutubeWrap","HiddenMenuAboutGyutube","isSelected","setIsSelected","HiddenMenuHomeWrap","HiddenMenuHome","HiddenMenuPreferenceWrap","HiddenMenuPreference","HiddenMenuSettingsWrap","HiddenMenuSettings","HiddenMenuSubscriptionWrap","ItemsWrap","ItemBar","TextBar","HiddenMenuSubscription","fullHeight","setFullHeight","showMore","setShowMore","HiddenMenuCopyRightWrap","a","HiddenMenuCopyRight","href","HiddenMenuGuideHomeWrap","HiddenMenuGuideHome","HiddenMenuWrap","BlackArea","HiddenMenuLogoWrap","HiddenMenuGuideWrap","HeaderLogoHiddenMenu","HeaderLogo","StyledBtnWrap","HeaderSearchBtn","type","VirtualKeyboard","setValue","virtualKeyboardInput","setVirtualKeyboardInput","setShowVirtualKeyboard","english","language","setLanguage","layoutState","setLayoutState","onChange","input","console","log","onKeyPress","prevInput","slice","korean","japanese","layout","layoutName","mergeDisplay","HeaderSearchFormKeyboard","HeaderSearchKeyboard","showVirtualKeyboard","HeaderSearchFormWrap","form","HeaderSearchFormBar","HeaderSearchFormMatchedBox","ol","HeaderSearchForm","value","matchedList","setMatchedList","findMatches","word","videos","regex","RegExp","match","showMatchedList","titleOfMatchedVideo","VideoData","onClickMatchedTitle","onSubmit","preventDefault","macthedVideos","placeholder","onKeyUp","HeaderSearchMicWrap","HeaderSearchMic","useSpeechRecognition","onResult","result","listen","listening","stop","onMouseDown","onMouseUp","HeaderSearchWrap","HeaderSearch","HeaderUserInfoDetailsAccountWrap","HeaderUserInfoDetailsAccount","HeaderUserInfoCircle","HeaderUserInfoIcon","HeaderUserInfoDetailsHeaderWrap","ManagingAccountBox","UserNameBox","UserAccount","HeaderUserInfoDetailsHeader","HeaderUserInfoDetailsModeWrap","HeaderUserInfoDetailsMode","HeaderUserInfoSettingsWrap","HeaderUserInfoDetailsSettings","isDark","clickDesign","setClickDesign","HeaderUserInfoDetailsWrap","HeaderUserInfoDetailsItemsWrap","HeaderUserInfoDetails","HeaderUserInfoWrap","HeaderUserInfo","StyledIcon","i","HeaderAddVideo","HeaderBtnsMenu","HeaderBtnsAlarm","HeaderBtnsWrap","HeaderBtns","HeaderStyle","header","Header","NavigatorCompassWrap","NavigatorCompass","NavigatorHomeWrap","NavigatorHome","NavigatorSubscriptionWrap","NavigatorSubscription","NavigatorStorageWrap","NavigatorStorage","NavigatorWrap","aside","Navigator","StyledPage","Main","searchedByKeyword","HashTagStyle","VideoTitle","hashtags","tag","ReportAndScriptsWrap","ReportAndScripts","VideoBtnsWrap","BtnsBox","BtnWrap","IconsWrap","LikeLine","span","VideoBtns","videoThumbUp","videoThumbDown","setNumFormat","number","num","ViewAndDateWrap","ViewAndDate","toLocaleString","VideoInfoWrap","VideoInfo","VideoUploaderWrap","ProfileWrap","Author","CertificationMark","Subscriber","SubscriptionWrap","SubscriptionBtn","SubscriptionBtnActive","SubscriptionBtnInactive","SubscriptionAlarm","VideoUploader","willBeSent","subscription","setSubscription","onClickSubscriptionBtn","subscriber","toString","substring","VideoUploaderArticleWrap","ArticleBox","ShowMoreOrLess","VideoUploaderArticle","post","showLess","setShowLess","isFullHeight","setIsFullHeight","toggleVisiblity","MetaWrap","VideoMeta","PinBox","Pinned","LikeBox","LikeIcon","LikeNumber","ReplyBox","CommentLikeBtns","commentThumbUp","commentThumbDown","VideoCommentsContentWrap","VideoCommentsContentBox","CommentWrap","NameBox","DateWrap","CommentContent","VideoCommentsContent","commentData","comment","timeData","commenter","commentPinned","commentDate","commentContent","VideoCommentsHeaderWrap","CommentsNumber","SortBy","VideoCommentsHeader","onMouseLeave","VideoCommentsLeaveCommentWrap","InputCommentWrap","InputComment","FocusEffect","CancleBtn","CommentBtn","VideoCommentsLeaveComment","showEffect","setShowEffect","onFocus","onBlur","VideoCommentsWrap","VideoComments","comments","CommentData","NextVideoListWrap","NextVideoBoxWrap","NextVideoBox","NextVideoExplanation","NextVideoTitleWrap","NextVideoList","setRandomNumber","candidates","push","setCandidates","randomlySorted","chosen","Math","floor","random","onMouseEnterVideo","onMouseOutVideo","matchedVideos","forEach","randomNumber","matchVideos","StyledArticle","StyledColumnsWrap","PrimaryWrap","PlayerWrap","InfoWrap","Playing","params","controls","GlobalStyle","createGlobalStyle","App","basename","exact","path","component","size","desktop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e3f050a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserData from \"../../../../DB/UserData.json\";\r\n\r\nconst ShowCase = styled.div`\r\n  width: calc(100% -100px);\r\n  overflow-x: hidden;\r\n  z-index: -1;\r\n  mask: linear-gradient(to right, black 95%, transparent);\r\n`;\r\n\r\nconst BtnsWrap = styled.div`\r\n  width: auto;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  position: relative;\r\n  left: 0;\r\n  transition-duration: 0.2s;\r\n  @media ${(props) => props.theme.mobile} {\r\n    transform: translateX(${(props) => props.moveX * props.barWidth + \"px\"});\r\n  }\r\n  @media ${(props) => props.theme.tablet} {\r\n    transform: translateX(\r\n      ${(props) => (props.moveX * props.barWidth) / 5 + \"px\"}\r\n    );\r\n  }\r\n  transform: translateX(\r\n    ${(props) => (props.moveX * props.barWidth) / 15 + \"px\"}\r\n  );\r\n`;\r\n\r\nconst StyledBtn = styled.button`\r\n  margin: 12px;\r\n  padding: 0 12px;\r\n  height: 32px;\r\n  border: solid 1px hsl(0, 0%, 80%);\r\n  border-radius: 16px;\r\n  min-width: 52.67px;\r\n  flex-shrink: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: var(--default-bg-color);\r\n  }\r\n  :active {\r\n    transition-duration: 0.2s;\r\n  }\r\n`;\r\n\r\nconst FilterBtns = ({ moveX = 0, barWidth = 0, setCheckTheme = () => {} }) => {\r\n  const [selectedBtn, setSelectedBtn] = useState(\"전체\");\r\n  // console.log(UserData.users[0].preferredTheme);\r\n  const preferredThemes = [...UserData.users[0].preferredTheme];\r\n  // console.log(preferredThemes);\r\n\r\n  const onClickBtn = (e) => {\r\n    const btnValue = e.target.innerText;\r\n    // console.log(setCheckTheme);\r\n    // console.log(btnValue);\r\n    setCheckTheme(btnValue);\r\n    setSelectedBtn(btnValue);\r\n  };\r\n\r\n  return (\r\n    <ShowCase>\r\n      <BtnsWrap moveX={moveX} barWidth={barWidth}>\r\n        <StyledBtn\r\n          className={`first ${selectedBtn === \"전체\" ? \"selected_btn\" : null}`}\r\n          onClick={onClickBtn}\r\n        >\r\n          전체\r\n        </StyledBtn>\r\n        {preferredThemes.map((preferredTheme) => {\r\n          return (\r\n            <StyledBtn\r\n              key={preferredTheme}\r\n              className={preferredTheme === selectedBtn ? \"selected_btn\" : null}\r\n              onClick={onClickBtn}\r\n            >\r\n              {preferredTheme}\r\n            </StyledBtn>\r\n          );\r\n        })}\r\n        <StyledBtn\r\n          className={\r\n            selectedBtn === \"최근에 업로드된 동영상\" ? \"selected_btn\" : null\r\n          }\r\n          onClick={onClickBtn}\r\n        >\r\n          최근에 업로드된 동영상\r\n        </StyledBtn>\r\n        <StyledBtn\r\n          className={selectedBtn === \"감상한 동영상\" ? \"selected_btn\" : null}\r\n          onClick={onClickBtn}\r\n        >\r\n          감상한 동영상\r\n        </StyledBtn>\r\n      </BtnsWrap>\r\n    </ShowCase>\r\n  );\r\n};\r\n\r\nexport default FilterBtns;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilterBtns from \"./filterBtns/FilterBtns\";\r\n\r\nconst FilterBarWrap = styled.div`\r\n  width: inherit;\r\n  height: 56px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 72px;\r\n  margin-top: 56px;\r\n  border-top: solid 1px hsl(0, 0%, 80%);\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: white;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n  @media ${(props) => props.theme.mobile} {\r\n    left: 0;\r\n  }\r\n  .first {\r\n    margin: 12px 12px 12px 24px;\r\n  }\r\n  .selected_btn,\r\n  .selected_btn:hover {\r\n    background-color: black;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst ArrowWrap = styled.div`\r\n  height: 56px;\r\n  width: 56px;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n\r\n  .fas {\r\n    font-size: 10px;\r\n  }\r\n  div {\r\n    height: 36px;\r\n    width: 36px;\r\n  }\r\n`;\r\n\r\nconst FilterBar = ({ setCheckTheme = () => {} }) => {\r\n  const [moveX, setMoveX] = useState(0);\r\n  const [barWidth, setBarWidth] = useState(0);\r\n  const barRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (barRef !== null) {\r\n      setBarWidth(barRef.current.offsetWidth);\r\n    }\r\n  }, []);\r\n\r\n  const onClickLeftArrow = () => {\r\n    setMoveX((prevMoveX) => {\r\n      return prevMoveX === 0 ? prevMoveX : prevMoveX + 1;\r\n    });\r\n  };\r\n\r\n  const onClickRightArrow = () => {\r\n    setMoveX((prevMoveX) => {\r\n      return prevMoveX < -4 ? prevMoveX : prevMoveX - 1;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FilterBarWrap ref={barRef}>\r\n      <ArrowWrap onClick={onClickLeftArrow}>\r\n        <div className=\"globalIconBtn\">\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </div>\r\n      </ArrowWrap>\r\n      <FilterBtns\r\n        setCheckTheme={setCheckTheme}\r\n        moveX={moveX}\r\n        barWidth={barWidth}\r\n      />\r\n      <ArrowWrap onClick={onClickRightArrow}>\r\n        <div className=\"globalIconBtn\">\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      </ArrowWrap>\r\n    </FilterBarWrap>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MenuBoxWrap = styled.div`\r\n  /* margin-top: 12px; */\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  /* padding-top: 12px; */\r\n  border-radius: 100%;\r\n  .fa-ellipsis-v {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MenuBox = memo(() => {\r\n  return (\r\n    <MenuBoxWrap className=\"globalIconBtn\">\r\n      <i className=\"fas fa-ellipsis-v\"></i>\r\n    </MenuBoxWrap>\r\n  );\r\n});\r\n\r\nexport default MenuBox;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n// import VideoData from \"../../../../../../DB/VideoData.json\";\r\n\r\nconst TitleBoxWrap = styled.div`\r\n  overflow: hidden;\r\n  /* padding-right: 24px; */\r\n`;\r\n\r\nconst TitleWrap = styled.div`\r\n  width: 100%;\r\n  height: 38px;\r\n  margin: 12px 0 4px 0;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  color: black;\r\n  /* overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis; */\r\n  white-space: normal;\r\n  word-wrap: break-word;\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nconst UserNameWrap = styled.div`\r\n  font-size: 13px;\r\n  color: hsl(0, 0%, 38%);\r\n`;\r\n\r\nconst ViewsWrap = styled.div`\r\n  font-size: 13px;\r\n  color: hsl(0, 0%, 38%);\r\n`;\r\n\r\nconst TitleBox = memo(({ videoData = {} }) => {\r\n  // console.log(\"타이틀박스\", videoData);\r\n  const views = videoData.videoViews;\r\n\r\n  const setViews = () => {\r\n    // console.log(parseInt(views));\r\n    if (parseInt(views) < 1000) {\r\n      return views;\r\n    } else if (parseInt(views) < 10000) {\r\n      return `${views[0]}천`;\r\n    } else if (parseInt(views) < 100000) {\r\n      return `${views[0]}만`;\r\n    } else if (parseInt(views) < 1000000) {\r\n      return `${views[0] + views[1]}만`;\r\n    } else if (parseInt(views) < 10000000) {\r\n      return `${views[0] + views[1] + views[2]}만`;\r\n    } else if (parseInt(views) < 100000000) {\r\n      return `${views[0]},${views[1] + views[2] + views[3]}만`;\r\n    } else if (parseInt(views) < 1000000000) {\r\n      return `${views[0]}억`;\r\n    } else if (parseInt(views) < 10000000000) {\r\n      return `${views[0] + views[1]}억`;\r\n    } else if (parseInt(views) < 100000000000) {\r\n      return `${views[0] + views[1] + views[2]}억`;\r\n    } else if (parseInt(views) < 1000000000000) {\r\n      return `${views[0]},${views[1] + views[2] + views[3]}억`;\r\n    }\r\n  };\r\n\r\n  const setYears = () => {\r\n    // 현재 날짜\r\n    const now = new Date();\r\n    const thisYear = now.getFullYear();\r\n    const thisMonth = now.getMonth() + 1;\r\n    const today = now.getDate();\r\n\r\n    // 업로드 날짜\r\n    const uploadYear = parseInt(videoData.videoUploadDate.split(\".\")[0]);\r\n    const uploadMonth = parseInt(videoData.videoUploadDate.split(\".\")[1]);\r\n    const uploadDate = parseInt(videoData.videoUploadDate.split(\".\")[2]);\r\n\r\n    const yearGap = thisYear - uploadYear;\r\n    const monthGap = thisMonth - uploadMonth;\r\n    const dateGap = today - uploadDate;\r\n\r\n    return yearGap >= 1\r\n      ? `${yearGap}년 `\r\n      : monthGap >= 1\r\n      ? `${monthGap}개월 `\r\n      : `${dateGap}일 `;\r\n  };\r\n\r\n  return (\r\n    <Link to={`/playing/${videoData.videoNo}/${videoData.videoTitle}`}>\r\n      <TitleBoxWrap>\r\n        <TitleWrap className=\"next_vdieo\">{videoData.mainTitle}</TitleWrap>\r\n        <div>\r\n          <UserNameWrap>{videoData.userName}</UserNameWrap>\r\n          <ViewsWrap>\r\n            조회수 {setViews()}회・{setYears()}전\r\n          </ViewsWrap>\r\n        </div>\r\n      </TitleBoxWrap>\r\n    </Link>\r\n  );\r\n});\r\n\r\nexport default TitleBox;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserData from \"../../../../../../DB/UserData.json\";\r\n\r\nconst UserIconWrap = styled.div`\r\n  height: 36px;\r\n  width: 36px;\r\n  flex-shrink: 0;\r\n  margin: 12px 12px 0 0;\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  img {\r\n    height: 36px;\r\n    width: 36px;\r\n  }\r\n`;\r\n\r\nconst UserIcon = memo(({ videoData = {}, commenters = {} }) => {\r\n  // console.log(\"유저 아이콘\", videoData);\r\n  // console.log(\"댓글러\", commenters);\r\n\r\n  const setDefaultPath = () => {\r\n    return `${process.env.PUBLIC_URL}/images/Happy(default).png`;\r\n  };\r\n\r\n  const setCommenterImagePath = () => {\r\n    return `${process.env.PUBLIC_URL}` + commenters.userImageUrl;\r\n  };\r\n\r\n  const setUserImagePath = () => {\r\n    const uploader = UserData.users.find(\r\n      (user) => user.userId === videoData.userId\r\n    );\r\n    return `${process.env.PUBLIC_URL}` + uploader.userImageUrl;\r\n  };\r\n\r\n  return (\r\n    <UserIconWrap>\r\n      <img\r\n        src={\r\n          Object.keys(commenters).length === 0\r\n            ? Object.keys(videoData).length === 0\r\n              ? setDefaultPath()\r\n              : setUserImagePath()\r\n            : setCommenterImagePath()\r\n        }\r\n        alt=\"FACE\"\r\n      />\r\n    </UserIconWrap>\r\n  );\r\n});\r\n\r\nexport default UserIcon;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MenuBox from \"./videoExplanaionDetails/MenuBox\";\r\nimport TitleBox from \"./videoExplanaionDetails/TitleBox\";\r\nimport UserIcon from \"./videoExplanaionDetails/UserIcon\";\r\n\r\nconst VideoExplanationWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  a {\r\n    width: calc(100% - 48px - 40px);\r\n  }\r\n`;\r\n\r\nconst VideoExplanaion = memo(({ videoData = {} }) => {\r\n  // console.log(\"설명박스\", videoData);\r\n  return (\r\n    <VideoExplanationWrap>\r\n      <UserIcon videoData={videoData} />\r\n      <TitleBox key={videoData.videoNo} videoData={videoData} />\r\n      <MenuBox />\r\n    </VideoExplanationWrap>\r\n  );\r\n});\r\n\r\nexport default VideoExplanaion;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport VideoExplanaion from \"./videoExplanaion/VideoExplanaion\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst VideoList = styled.li`\r\n  max-width: 340px;\r\n  max-height: 287px;\r\n  min-height: 140px;\r\n  margin: 0 8px 40px 8px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  :hover .fa-ellipsis-v {\r\n    display: flex;\r\n  }\r\n\r\n  @media ${(props) => props.theme.mobile} {\r\n    width: 100%;\r\n    max-width: none;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nconst VideoWrap = styled.div`\r\n  width: 99%;\r\n  height: 66%;\r\n  background-color: black;\r\n  @media ${(props) => props.theme.mobile} {\r\n    /* max-height: 79%; */\r\n    position: relative;\r\n    padding-top: 56.25%;\r\n    overflow: hidden;\r\n    width: auto;\r\n    height: auto;\r\n  }\r\n  video {\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    @media ${(props) => props.theme.mobile} {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      max-width: 100%;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nconst VideoSummary = ({ video = {} }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const videoRef = useRef();\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      videoRef.current.play();\r\n    } else if (!isPlaying) {\r\n      videoRef.current.pause();\r\n      videoRef.current.currentTime = 0;\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const onMouseEnterVideo = (e) => {\r\n    setIsPlaying(true);\r\n    // console.log(e);\r\n    // if (e.target.paused && !isPlaying) {\r\n    //   e.target.play();\r\n    // }\r\n  };\r\n\r\n  const onMouseOutVideo = (e) => {\r\n    setIsPlaying(false);\r\n    // if (!video.paused && isPlaying) {\r\n    //   e.target.pause();\r\n    //   e.target.currentTime = 0;\r\n    // }\r\n  };\r\n  // console.log(\"비디오 서머리\", video);\r\n\r\n  return (\r\n    // video태그와 explanation 태그를 묶어서 저장할 것이므로... 이걸로 글자에 마우스 올려도 비디오 자동재생하기\r\n    <VideoList>\r\n      <Link to={`/playing/${video.videoNo}/${video.videoTitle}`}>\r\n        {/* video box를 하나 만들어서 video는 100% 100%로 */}\r\n        <VideoWrap>\r\n          <video\r\n            ref={videoRef}\r\n            src={`${process.env.PUBLIC_URL}/videos/${video.videoTitle}.mp4`}\r\n            onMouseEnter={onMouseEnterVideo}\r\n            onMouseOut={onMouseOutVideo}\r\n            muted={true}\r\n          />\r\n        </VideoWrap>\r\n      </Link>\r\n      <VideoExplanaion key={video.videoNo} videoData={video} />\r\n    </VideoList>\r\n  );\r\n};\r\n\r\nexport default VideoSummary;\r\n","import React from \"react\";\r\nimport VideoSummary from \"./videoSummary/VideoSummary\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VideoBoxWrap = styled.ul`\r\n  margin-top: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  flex: 1 1 25%;\r\n\r\n  @media ${(props) => props.theme.mobile} {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst VideoBox = ({ videoData = {}, checkTheme = \"전체\" }) => {\r\n  // console.log(\"비디오박스\", videoData);\r\n  // Name 선택하는 부분은 차후 백엔드 로직을 배워서 입력하고 우선 videos 내의 파일 이름순으로 배치\r\n  // 썸네일 동영상 최대 5개, 최소 1개 반응형으로 배치 > 20개까지는 넣고... 3개일 때부터 빈 칸 추가하기(3으로 나눈 나머지)\r\n  // console.log(videoData.length % 4);\r\n  // console.log(checkTheme);\r\n\r\n  return (\r\n    <VideoBoxWrap>\r\n      {checkTheme === \"전체\"\r\n        ? videoData.map((video) => {\r\n            return <VideoSummary key={video.videoNo} video={video} />;\r\n          })\r\n        : videoData\r\n            .filter((video) => video.theme.includes(checkTheme))\r\n            .map((video) => {\r\n              return <VideoSummary key={video.videoNo} video={video} />;\r\n            })}\r\n    </VideoBoxWrap>\r\n  );\r\n};\r\n\r\nexport default VideoBox;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilterBar from \"./filterComponents/FilterBar\";\r\nimport VideoBox from \"./videoBox/VideoBox\";\r\n\r\nconst ContentsBoxWrap = styled.article`\r\n  width: calc(100% - 72px);\r\n  margin-left: 72px;\r\n  padding-top: calc(56px + 56px);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: hsl(0, 0%, 98%);\r\n  @media ${(props) => props.theme.mobile} {\r\n    width: 100%;\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst ContentsBox = ({ videoData = {} }) => {\r\n  const [checkTheme, setCheckTheme] = useState(\"전체\");\r\n  // console.log(setCheckTheme);\r\n  // console.log(\"콘텐츠박스\", videoData);\r\n  return (\r\n    <ContentsBoxWrap>\r\n      <FilterBar setCheckTheme={setCheckTheme} />\r\n      <VideoBox\r\n        key={videoData.videoNo}\r\n        videoData={videoData}\r\n        checkTheme={checkTheme}\r\n      />\r\n    </ContentsBoxWrap>\r\n  );\r\n};\r\n\r\nexport default ContentsBox;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderLogoWrap = styled.div`\r\n  width: 129px;\r\n  height: inherit;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  .fa-youtube {\r\n    font-size: 28px;\r\n    color: hsl(0, 100%, 50%);\r\n    margin-right: 2px;\r\n  }\r\n  .gyutube {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    font-family: \"Roboto\", sans-serif;\r\n    letter-spacing: -2.5px;\r\n    color: hsl(0, 0%, 13%);\r\n  }\r\n  .sup {\r\n    font-weight: 400;\r\n    font-size: 8px;\r\n    color: hsl(0, 0%, 52%);\r\n    letter-spacing: 0;\r\n    position: relative;\r\n    top: -4px;\r\n    left: 4px;\r\n  }\r\n  a {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst HeaderLogoMainLogo = memo(({ setSearchedByKeyword = () => {} }) => {\r\n  const onClickLogo = () => {\r\n    setSearchedByKeyword([]);\r\n  };\r\n  return (\r\n    <HeaderLogoWrap onClick={onClickLogo}>\r\n      <Link to=\"/\" className=\"gyutube\">\r\n        <i className=\"fab fa-youtube\"></i>\r\n      </Link>\r\n      <Link to=\"/\" className=\"gyutube\">\r\n        GyuTube<sup className=\"sup\">KR</sup>\r\n      </Link>\r\n    </HeaderLogoWrap>\r\n  );\r\n});\r\n\r\nexport default HeaderLogoMainLogo;\r\n","import React from \"react\";\r\n\r\nconst HeaderLogoOpenMenu = ({\r\n  willBeShown = false,\r\n  setWillBeShown = () => {},\r\n}) => {\r\n  const onClickLogo = () => {\r\n    setWillBeShown(!willBeShown);\r\n  };\r\n\r\n  return (\r\n    <div className=\"globalIconBtn\" onClick={onClickLogo}>\r\n      <i className=\"fas fa-bars\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderLogoOpenMenu;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HiddenMenuAboutGyutubeWrap = styled.div`\r\n  height: 291px;\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n  padding: 12px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst TitleWrap = styled.div`\r\n  height: 40px;\r\n  padding: 0px 24px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: hsl(0, 0%, 40%);\r\n`;\r\n\r\n// 글로벌 스타일 적용! 필요없다\r\n// const ItemsWrap = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n// `;\r\n\r\n// const ItemBar = styled.div`\r\n//   height: 40px;\r\n//   padding: 0 20px;\r\n//   display: flex;\r\n//   justify-content: flex-start;\r\n//   align-items: center;\r\n//   :hover {\r\n//     cursor: pointer;\r\n//     background-color: var(--hover-bg-color);\r\n//   }\r\n//   :active {\r\n//     background-color: var(--active-bg-color);\r\n//   }\r\n// `;\r\n\r\n// const TextBar = styled.div`\r\n//   width: 144px;\r\n//   height: 20px;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   font-size: 14px;\r\n//   font-weight: 400;\r\n// `;\r\n\r\n// const div = styled.div`\r\n//   width: 30px;\r\n//   height: 30px;\r\n//   margin-right: 18px;\r\n// `;\r\n\r\nconst HiddenMenuAboutGyutube = memo(\r\n  ({ isSelected = \"Home\", setIsSelected = () => {} }) => {\r\n    const onClickPremium = () => {\r\n      setIsSelected(\"Premium\");\r\n    };\r\n    const onClickMovie = () => {\r\n      setIsSelected(\"Movie\");\r\n    };\r\n    const onClickGame = () => {\r\n      setIsSelected(\"Game\");\r\n    };\r\n    const onClickLive = () => {\r\n      setIsSelected(\"Live\");\r\n    };\r\n    const onClickStudy = () => {\r\n      setIsSelected(\"Study\");\r\n    };\r\n    const onClickSports = () => {\r\n      setIsSelected(\"Sports\");\r\n    };\r\n\r\n    return (\r\n      <HiddenMenuAboutGyutubeWrap>\r\n        <TitleWrap>GyuTube 더보기</TitleWrap>\r\n        <div className=\"globalItemsWrap\">\r\n          <div\r\n            className={`${\r\n              isSelected === \"Premium\" ? \"selected\" : null\r\n            } globalItemBar`}\r\n            onClick={onClickPremium}\r\n          >\r\n            <div className=\"globalIconBtnRect globalIconWrap\">\r\n              <i className=\"fab fa-youtube\"></i>\r\n            </div>\r\n            <div className=\"globalTextBar\">GyuTube Premium</div>\r\n          </div>\r\n          <div\r\n            className={`${\r\n              isSelected === \"Movie\" ? \"selected\" : null\r\n            } globalItemBar`}\r\n            onClick={onClickMovie}\r\n          >\r\n            <div className=\"globalIconBtnRect globalIconWrap\">\r\n              <i className=\"fas fa-film\"></i>\r\n            </div>\r\n            <div className=\"globalTextBar\">영화</div>\r\n          </div>\r\n          <div\r\n            className={`${\r\n              isSelected === \"Game\" ? \"selected\" : null\r\n            } globalItemBar`}\r\n            onClick={onClickGame}\r\n          >\r\n            <div className=\"globalIconBtnRect globalIconWrap\">\r\n              <i className=\"fas fa-gamepad\"></i>\r\n            </div>\r\n            <div className=\"globalTextBar\">게임</div>\r\n          </div>\r\n          <div\r\n            className={`${\r\n              isSelected === \"Live\" ? \"selected\" : null\r\n            } globalItemBar`}\r\n            onClick={onClickLive}\r\n          >\r\n            <div className=\"globalIconBtnRect globalIconWrap\">\r\n              <i className=\"fas fa-podcast\"></i>\r\n            </div>\r\n            <div className=\"globalTextBar\">실시간</div>\r\n          </div>\r\n          <div\r\n            className={`${\r\n              isSelected === \"Study\" ? \"selected\" : null\r\n            } globalItemBar`}\r\n            onClick={onClickStudy}\r\n          >\r\n            <div className=\"globalIconBtnRect globalIconWrap\">\r\n              <i className=\"fas fa-lightbulb\"></i>\r\n            </div>\r\n            <div className=\"globalTextBar\">학습</div>\r\n          </div>\r\n          <div\r\n            className={`${\r\n              isSelected === \"Sports\" ? \"selected\" : null\r\n            } globalItemBar`}\r\n            onClick={onClickSports}\r\n          >\r\n            <div className=\"globalIconBtnRect globalIconWrap\">\r\n              <i className=\"fas fa-trophy\"></i>\r\n            </div>\r\n            <div className=\"globalTextBar\">스포츠</div>\r\n          </div>\r\n        </div>\r\n      </HiddenMenuAboutGyutubeWrap>\r\n    );\r\n  }\r\n);\r\n\r\nexport default HiddenMenuAboutGyutube;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HiddenMenuHomeWrap = styled.div`\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n  padding: 12px 0;\r\n`;\r\n\r\n// const ItemBar = styled.div`\r\n//   height: 40px;\r\n//   padding: 0 20px;\r\n//   display: flex;\r\n//   justify-content: flex-start;\r\n//   align-items: center;\r\n//   .text {\r\n//     display: none;\r\n//   }\r\n//   :hover {\r\n//     cursor: pointer;\r\n//     background-color: var(--hover-bg-color);\r\n//   }\r\n//   :hover .selected,\r\n//   :hover .fas {\r\n//     background-color: var(--hover-bg-color);\r\n//   }\r\n//   :active {\r\n//     background-color: var(--active-bg-color);\r\n//   }\r\n//   :active .selected,\r\n//   :active .fas {\r\n//     background-color: var(--active-bg-color);\r\n//   }\r\n// `;\r\n\r\n// const TextBar = styled.div`\r\n//   width: 144px;\r\n//   height: 20px;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   font-size: 14px;\r\n//   font-weight: 400;\r\n// `;\r\n\r\n// const IconWrap = styled.div`\r\n//   width: 30px;\r\n//   margin-right: 18px;\r\n//   div {\r\n//     height: 40px;\r\n//   }\r\n// `;\r\n\r\nconst HiddenMenuHome = ({ isSelected = \"Home\", setIsSelected = () => {} }) => {\r\n  const onClickHome = () => {\r\n    setIsSelected(\"Home\");\r\n  };\r\n  const onClickSearch = () => {\r\n    setIsSelected(\"Search\");\r\n  };\r\n  const onClickMySubscription = () => {\r\n    setIsSelected(\"MySubscription\");\r\n  };\r\n  return (\r\n    <HiddenMenuHomeWrap>\r\n      <div\r\n        className={`${isSelected === \"Home\" ? \"selected\" : null} globalItemBar`}\r\n        onClick={onClickHome}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"fas fa-home\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">홈</div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isSelected === \"Search\" ? \"selected\" : null\r\n        } globalItemBar`}\r\n        onClick={onClickSearch}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"fas fa-compass\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">탐색</div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isSelected === \"MySubscription\" ? \"selected\" : null\r\n        } globalItemBar`}\r\n        onClick={onClickMySubscription}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"fas fa-layer-group\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">구독</div>\r\n      </div>\r\n    </HiddenMenuHomeWrap>\r\n  );\r\n};\r\n\r\nexport default HiddenMenuHome;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HiddenMenuPreferenceWrap = styled.div`\r\n  height: 223px;\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n  padding: 12px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\n// const ItemBar = styled.div`\r\n//   height: 40px;\r\n//   padding: 0 20px;\r\n//   display: flex;\r\n//   justify-content: flex-start;\r\n//   align-items: center;\r\n//   .text {\r\n//     display: none;\r\n//   }\r\n//   :hover {\r\n//     cursor: pointer;\r\n//     background-color: var(--hover-bg-color);\r\n//   }\r\n//   :active {\r\n//     background-color: var(--active-bg-color);\r\n//   }\r\n// `;\r\n\r\n// const TextBar = styled.div`\r\n//   width: 144px;\r\n//   height: 20px;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   font-size: 14px;\r\n//   font-weight: 400;\r\n// `;\r\n\r\n// const IconWrap = styled.div`\r\n//   width: 30px;\r\n//   height: 30px;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   margin-right: 18px;\r\n// `;\r\n\r\nconst HiddenMenuPreference = ({\r\n  isSelected = \"Home\",\r\n  setIsSelected = () => {},\r\n}) => {\r\n  const onClickStorage = () => {\r\n    setIsSelected(\"Storage\");\r\n  };\r\n  const onClickRecord = () => {\r\n    setIsSelected(\"Record\");\r\n  };\r\n  const onClickMyVideo = () => {\r\n    setIsSelected(\"MyVideo\");\r\n  };\r\n  const onClickKeepVideo = () => {\r\n    setIsSelected(\"KeepVideo\");\r\n  };\r\n  const onClickThumbsUpVideo = () => {\r\n    setIsSelected(\"ThumbsUpVideo\");\r\n  };\r\n  return (\r\n    <HiddenMenuPreferenceWrap>\r\n      <div\r\n        className={`${\r\n          isSelected === \"Storage\" ? \"selected\" : null\r\n        } globalItemBar`}\r\n        onClick={onClickStorage}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"fas fa-clone\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">보관함</div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isSelected === \"Record\" ? \"selected\" : null\r\n        } globalItemBar`}\r\n        onClick={onClickRecord}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"fas fa-history\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">시청 기록</div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isSelected === \"MyVideo\" ? \"selected\" : null\r\n        } globalItemBar`}\r\n        onClick={onClickMyVideo}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"far fa-play-circle\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">내 동영상</div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isSelected === \"KeepVideo\" ? \"selected\" : null\r\n        } globalItemBar`}\r\n        onClick={onClickKeepVideo}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"fas fa-clock\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">나중에 볼 동영상</div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isSelected === \"ThumbsUpVideo\" ? \"selected\" : null\r\n        } globalItemBar`}\r\n        onClick={onClickThumbsUpVideo}\r\n      >\r\n        <div className=\"globalIconBtnRect globalIconWrap\">\r\n          <i className=\"fas fa-thumbs-up\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">좋아요 표시한 동영상</div>\r\n      </div>\r\n    </HiddenMenuPreferenceWrap>\r\n  );\r\n};\r\n\r\nexport default HiddenMenuPreference;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HiddenMenuSettingsWrap = styled.div`\r\n  height: 176px;\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n  padding: 12px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  /* .fab {\r\n    font-size: 18px;\r\n    color: hsl(0, 0%, 38%);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .fab:hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  } */\r\n`;\r\n\r\n// const ItemsWrap = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n// `;\r\n\r\n// const ItemBar = styled.div`\r\n//   height: 40px;\r\n//   padding: 0 20px;\r\n//   display: flex;\r\n//   justify-content: flex-start;\r\n//   align-items: center;\r\n//   :hover {\r\n//     cursor: pointer;\r\n//     background-color: var(--hover-bg-color);\r\n//   }\r\n//   :active {\r\n//     background-color: var(--active-bg-color);\r\n//   }\r\n// `;\r\n\r\n// const TextBar = styled.div`\r\n//   width: 144px;\r\n//   height: 20px;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   font-size: 14px;\r\n//   font-weight: 400;\r\n// `;\r\n\r\n// const IconWrap = styled.div`\r\n//   width: 30px;\r\n//   height: 30px;\r\n//   margin-right: 18px;\r\n// `;\r\n\r\nconst HiddenMenuSettings = ({\r\n  isSelected = \"Home\",\r\n  setIsSelected = () => {},\r\n}) => {\r\n  const onClickSettings = () => {\r\n    setIsSelected(\"Settings\");\r\n  };\r\n  const onClickReport = () => {\r\n    setIsSelected(\"Report\");\r\n  };\r\n  const onClickCustomerCenter = () => {\r\n    setIsSelected(\"CustomerCenter\");\r\n  };\r\n  const onClickOpinion = () => {\r\n    setIsSelected(\"Opinion\");\r\n  };\r\n  return (\r\n    <HiddenMenuSettingsWrap>\r\n      <div className=\"globalItemsWrap\">\r\n        <div\r\n          className={`${\r\n            isSelected === \"Settings\" ? \"selected\" : null\r\n          } globalItemBar`}\r\n          onClick={onClickSettings}\r\n        >\r\n          <div className=\"globalIconBtnRect globalIconWrap\">\r\n            <i className=\"fas fa-cog\"></i>\r\n          </div>\r\n          <div className=\"globalTextBar\">설정</div>\r\n        </div>\r\n        <div\r\n          className={`${\r\n            isSelected === \"Report\" ? \"selected\" : null\r\n          } globalItemBar`}\r\n          onClick={onClickReport}\r\n        >\r\n          <div className=\"globalIconBtnRect globalIconWrap\">\r\n            <i className=\"fas fa-flag\"></i>\r\n          </div>\r\n          <div className=\"globalTextBar\">신고 기록</div>\r\n        </div>\r\n        <div\r\n          className={`${\r\n            isSelected === \"CustomerCenter\" ? \"selected\" : null\r\n          } globalItemBar`}\r\n          onClick={onClickCustomerCenter}\r\n        >\r\n          <div className=\"globalIconBtnRect globalIconWrap\">\r\n            <i className=\"fas fa-question-circle\"></i>\r\n          </div>\r\n          <div className=\"globalTextBar\">고객센터</div>\r\n        </div>\r\n        <div\r\n          className={`${\r\n            isSelected === \"Opinion\" ? \"selected\" : null\r\n          } globalItemBar`}\r\n          onClick={onClickOpinion}\r\n        >\r\n          <div className=\"globalIconBtnRect globalIconWrap\">\r\n            <i className=\"fas fa-comment-alt\"></i>\r\n          </div>\r\n          <div className=\"globalTextBar\">의견 보내기</div>\r\n        </div>\r\n      </div>\r\n    </HiddenMenuSettingsWrap>\r\n  );\r\n};\r\n\r\nexport default HiddenMenuSettings;\r\n","import React, { useState, memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserIcon from \"../../../../../contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/UserIcon\";\r\n// import UserData from \"../../../../../../DB/UserData.json\";\r\n\r\nconst HiddenMenuSubscriptionWrap = styled.div`\r\n  min-height: 371px;\r\n  padding: 12px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n  .min {\r\n    max-height: 280px;\r\n  }\r\n  .full {\r\n    overflow-y: visible;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst TitleWrap = styled.div`\r\n  height: 40px;\r\n  padding: 8px 12px 8px 20px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: hsl(0, 0%, 40%);\r\n`;\r\n\r\nconst ItemsWrap = styled.div`\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemBar = styled.div`\r\n  height: 40px;\r\n  padding: 0px 20px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  div {\r\n    height: 40px;\r\n    img {\r\n      width: 24px;\r\n      height: 24px;\r\n    }\r\n    color: black;\r\n  }\r\n  div:first-child {\r\n    height: 24px;\r\n    width: 24px;\r\n    font-size: 12px;\r\n    margin: 0 16px 0 2px;\r\n  }\r\n  .moreOrLess {\r\n    padding: 0px 12px;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: var(--hover-bg-color);\r\n  }\r\n  :active {\r\n    background-color: var(--active-bg-color);\r\n  }\r\n`;\r\n\r\nconst TextBar = styled.div`\r\n  width: 144px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst ArrowWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst HiddenMenuSubscription = memo(\r\n  ({ isSelected = \"Home\", setIsSelected = () => {} }) => {\r\n    const [fullHeight, setFullHeight] = useState(\"min\");\r\n    const [showMore, setShowMore] = useState(false);\r\n\r\n    // const subscriptions = [...UserData.users[0].subscription];\r\n    // console.log(subscriptions);\r\n\r\n    const onClickMore = () => {\r\n      if (fullHeight === \"full\") {\r\n        setFullHeight(\"min\");\r\n      } else {\r\n        setFullHeight(\"full\");\r\n      }\r\n      // console.log(fullHeight);\r\n      setShowMore(!showMore);\r\n    };\r\n    return (\r\n      <HiddenMenuSubscriptionWrap>\r\n        <TitleWrap>구독</TitleWrap>\r\n        <ItemsWrap className={fullHeight}>\r\n          {/* 여기는 데이터를 받아와서 선택되어야 하므로.. 잠시 대기 */}\r\n          <ItemBar className={isSelected === \"Gyutube\" ? \"selected\" : null}>\r\n            <UserIcon />\r\n            <TextBar>승우엄마</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>침착우먼</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>ChaseDownWNBA</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>드럼코딩</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>코마드 노더</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>일상생활코딩</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>Offline Tutorials</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>싸이콜로지컬갤러리</TextBar>\r\n          </ItemBar>\r\n          <ItemBar>\r\n            <UserIcon />\r\n            <TextBar>너는숨겨질것이야</TextBar>\r\n          </ItemBar>\r\n        </ItemsWrap>\r\n        <ItemBar onClick={onClickMore} className=\"moreOrLess\">\r\n          <ArrowWrap className=\"globalIconBtnRect\">\r\n            <i\r\n              className={showMore ? \"fas fa-chevron-up\" : \"fas fa-chevron-down\"}\r\n            ></i>\r\n          </ArrowWrap>\r\n          <TextBar>{showMore ? \"간략히 보기\" : \"100개 더보기\"}</TextBar>\r\n        </ItemBar>\r\n      </HiddenMenuSubscriptionWrap>\r\n    );\r\n  }\r\n);\r\n\r\nexport default HiddenMenuSubscription;\r\n","import React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HiddenMenuCopyRightWrap = styled.div`\r\n  padding: 12px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst ItemsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  .copyright {\r\n    font-size: 11px;\r\n    line-height: 1.7;\r\n    color: hsl(0, 0%, 60%);\r\n  }\r\n`;\r\n\r\nconst ItemBar = styled.div`\r\n  padding: 6px 20px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  div {\r\n    height: 40px;\r\n    margin-right: 24px;\r\n  }\r\n`;\r\n\r\nconst TextBar = styled.a`\r\n  margin-right: 8px;\r\n  font-size: 13px;\r\n  width: auto;\r\n`;\r\n\r\nconst HiddenMenuCopyRight = memo(() => {\r\n  return (\r\n    <HiddenMenuCopyRightWrap>\r\n      <ItemsWrap>\r\n        <ItemBar>\r\n          <TextBar href=\"\">정보</TextBar>\r\n          <TextBar href=\"\">보도자료</TextBar>\r\n          <TextBar href=\"\">저작권</TextBar>\r\n          <TextBar href=\"\">문의하기</TextBar>\r\n          <TextBar href=\"\">크리에이터</TextBar>\r\n          <TextBar href=\"\">광고</TextBar>\r\n          <TextBar href=\"\">개발자</TextBar>\r\n        </ItemBar>\r\n        <ItemBar>\r\n          <TextBar href=\"\">약관</TextBar>\r\n          <TextBar href=\"\">개인정보처리방침</TextBar>\r\n          <TextBar href=\"\">정책 및 안전</TextBar>\r\n          <TextBar href=\"\">Gyutube 작동의 원리</TextBar>\r\n          <TextBar href=\"\">새로운 기능 테스트하기</TextBar>\r\n        </ItemBar>\r\n        <ItemBar className=\"copyright\">\r\n          © 2021 Gyugle LLC <br />\r\n          CEO: 승규 킴 <br />\r\n          주소: 전라남도 여수시 미평동 귀인촌 301호 <br />\r\n          전화: 061-653-5634(무료)\r\n        </ItemBar>\r\n      </ItemsWrap>\r\n    </HiddenMenuCopyRightWrap>\r\n  );\r\n});\r\n\r\nexport default HiddenMenuCopyRight;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HiddenMenuAboutGyutube from \"./hiddenMenuAboutGyutube/HiddenMenuAboutGyutube\";\r\nimport HiddenMenuHome from \"./hiddenMenuHome/HiddenMenuHome\";\r\nimport HiddenMenuPreference from \"./hiddenMenuPreference/HiddenMenuPreference\";\r\nimport HiddenMenuSettings from \"./hiddenMenuSettings/HiddenMenuSettings\";\r\nimport HiddenMenuSubscription from \"./hiddenMenuSubscription/HiddenMenuSubscription\";\r\nimport HiddenMenuCopyRight from \"./hiddenMenuCopyRight/HiddenMenuCopyRight\";\r\n\r\nconst HiddenMenuGuideHomeWrap = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  /* display: inline-block; */\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst HiddenMenuGuideHome = () => {\r\n  const [isSelected, setIsSelected] = useState(\"Home\");\r\n  return (\r\n    <HiddenMenuGuideHomeWrap>\r\n      <HiddenMenuHome isSelected={isSelected} setIsSelected={setIsSelected} />\r\n      <HiddenMenuPreference\r\n        isSelected={isSelected}\r\n        setIsSelected={setIsSelected}\r\n      />\r\n      <HiddenMenuSubscription\r\n        isSelected={isSelected}\r\n        setIsSelected={setIsSelected}\r\n      />\r\n      <HiddenMenuAboutGyutube\r\n        isSelected={isSelected}\r\n        setIsSelected={setIsSelected}\r\n      />\r\n      <HiddenMenuSettings\r\n        isSelected={isSelected}\r\n        setIsSelected={setIsSelected}\r\n      />\r\n      <HiddenMenuCopyRight />\r\n    </HiddenMenuGuideHomeWrap>\r\n  );\r\n};\r\n\r\nexport default HiddenMenuGuideHome;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderLogoMainLogo from \"../headerLogoMainLogo/HeaderLogoMainLogo\";\r\nimport HeaderLogoOpenMenu from \"../headerLogoOpenMenu/HeaderLogoOpenMenu\";\r\nimport HiddenMenuGuideHome from \"./hiddenMenuGuideHome/HiddenMenuGuideHome\";\r\n\r\nconst HiddenMenuWrap = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: white;\r\n  transition-duration: 0.2s;\r\n  flex-direction: column;\r\n  z-index: 3;\r\n\r\n  .sup {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst BlackArea = styled.div`\r\n  position: absolute;\r\n  background-color: black;\r\n  /* top: -56px; */\r\n  left: 240px;\r\n  opacity: 0.3;\r\n  height: calc(100vh + 56px);\r\n  width: calc(100vw - 240px);\r\n  transition-duration: 0.2s;\r\n  z-index: 1;\r\n`;\r\n\r\nconst HiddenMenuLogoWrap = styled.div`\r\n  height: 55.5px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  /* margin-left: 16px; */\r\n  padding-left: 16px;\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n`;\r\n\r\nconst HiddenMenuGuideWrap = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 56px);\r\n  background-color: white;\r\n`;\r\n\r\nconst HeaderLogoHiddenMenu = ({ willBeShown, setWillBeShown }) => {\r\n  const onClickLogo = () => {\r\n    setWillBeShown(!willBeShown);\r\n  };\r\n\r\n  return (\r\n    <HiddenMenuWrap className={willBeShown ? \"visible\" : \"invisible\"}>\r\n      <HiddenMenuLogoWrap className={willBeShown ? \"visible\" : \"invisible\"}>\r\n        <HeaderLogoOpenMenu\r\n          willBeShown={willBeShown}\r\n          setWillBeShown={setWillBeShown}\r\n        />\r\n        <HeaderLogoMainLogo />\r\n      </HiddenMenuLogoWrap>\r\n      <HiddenMenuGuideWrap>\r\n        <HiddenMenuGuideHome />\r\n      </HiddenMenuGuideWrap>\r\n      <BlackArea\r\n        onClick={onClickLogo}\r\n        className={willBeShown ? \"display__on\" : \"display__off\"}\r\n      />\r\n    </HiddenMenuWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderLogoHiddenMenu;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderLogoMainLogo from \"./headerLogoMainLogo/HeaderLogoMainLogo\";\r\nimport HeaderLogoOpenMenu from \"./headerLogoOpenMenu/HeaderLogoOpenMenu\";\r\nimport HeaderLogoHiddenMenu from \"./headerLogoHiddenMenu/HeaderLogoHiddenMenu\";\r\n\r\nconst HeaderLogoWrap = styled.div`\r\n  width: 169px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  .visible {\r\n    width: 240px;\r\n    visibility: visible;\r\n  }\r\n  .invisible {\r\n    width: 0;\r\n    visibility: hidden;\r\n  }\r\n`;\r\n\r\nconst HeaderLogo = ({ setSearchedByKeyword = () => {} }) => {\r\n  const [willBeShown, setWillBeShown] = useState(false);\r\n\r\n  return (\r\n    <HeaderLogoWrap>\r\n      <HeaderLogoOpenMenu\r\n        willBeShown={willBeShown}\r\n        setWillBeShown={setWillBeShown}\r\n      />\r\n      <HeaderLogoMainLogo setSearchedByKeyword={setSearchedByKeyword} />\r\n      <HeaderLogoHiddenMenu\r\n        willBeShown={willBeShown}\r\n        setWillBeShown={setWillBeShown}\r\n      />\r\n    </HeaderLogoWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderLogo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBtnWrap = styled.div`\r\n  width: 72px;\r\n  height: 32px;\r\n  border: none;\r\n  border-left: solid 1px hsl(0, 0%, 80%);\r\n  text-align: center;\r\n  line-height: 32px;\r\n  position: relative;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: hsl(0, 0%, 80%);\r\n    border-color: hsl(0, 0%, 80%);\r\n    .fa-search {\r\n      color: black;\r\n    }\r\n  }\r\n  :hover .globalBlackExplanation {\r\n    line-height: normal;\r\n    display: block;\r\n    top: 44px;\r\n    left: 7.87px;\r\n  }\r\n  .fa-search {\r\n    font-size: 16px;\r\n    color: hsl(0, 0%, 38%);\r\n  }\r\n`;\r\n\r\nconst StyledBtn = styled.button`\r\n  background-color: hsl(0, 0%, 90%);\r\n  border: none;\r\n  width: 100%;\r\n  height: calc(100% + 1px);\r\n  display: block;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst HeaderSearchBtn = () => {\r\n  return (\r\n    <StyledBtnWrap>\r\n      <StyledBtn type=\"submit\">\r\n        <i className=\"fas fa-search\"></i>\r\n      </StyledBtn>\r\n      <div className=\"globalBlackExplanation\">검색</div>\r\n    </StyledBtnWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderSearchBtn;\r\n","import React, { useState } from \"react\";\r\nimport KeyboardReact from \"react-simple-keyboard\";\r\nimport korean from \"simple-keyboard-layouts/build/layouts/korean\";\r\nimport japanese from \"simple-keyboard-layouts/build/layouts/japanese\";\r\nimport english from \"simple-keyboard-layouts/build/layouts/english\";\r\n\r\nimport \"react-simple-keyboard/build/css/index.css\";\r\n\r\nconst VirtualKeyboard = ({\r\n  setValue = () => {},\r\n  virtualKeyboardInput = \"\",\r\n  setVirtualKeyboardInput = () => {},\r\n  setShowVirtualKeyboard = () => {},\r\n}) => {\r\n  const [language, setLanguage] = useState(english);\r\n  const [layoutState, setLayoutState] = useState(\"default\");\r\n  const onChange = (input) => {\r\n    console.log(\"Input changed\", input);\r\n    setVirtualKeyboardInput(input);\r\n  };\r\n\r\n  const onKeyPress = (button) => {\r\n    console.log(button);\r\n    if (button === \"{bksp}\") {\r\n      setVirtualKeyboardInput((prevInput) => {\r\n        return prevInput.slice(0, -1);\r\n      });\r\n    } else if (button === \"{enter}\") {\r\n      setValue(virtualKeyboardInput);\r\n      setShowVirtualKeyboard(false);\r\n    } else if (button === \"{shift}\") {\r\n      // shift 로직 생각해보자...\r\n    } else if (button === \"{lock}\") {\r\n      layoutState === \"default\"\r\n        ? setLayoutState(\"shift\")\r\n        : setLayoutState(\"default\");\r\n    } else if (button === \"{tab}\") {\r\n      // tab으로 layout 변경해보자... 이왕이면 글자도 바꾸자\r\n      language === korean\r\n        ? setLanguage(english)\r\n        : language === english\r\n        ? setLanguage(japanese)\r\n        : setLanguage(korean);\r\n    }\r\n  };\r\n  return (\r\n    <KeyboardReact\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n      layout={language.layout}\r\n      layoutName={layoutState}\r\n      mergeDisplay={true}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VirtualKeyboard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport VirtualKeyboard from \"./VirtualKeyboard\";\r\n\r\nconst HeaderSearchFormKeyboard = styled.div`\r\n  width: 31px;\r\n  height: 24px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 4px;\r\n  position: relative;\r\n  .fa-keyboard {\r\n    color: hsl(0, 0%, 38%);\r\n  }\r\n  .fa-keyboard:hover {\r\n    cursor: pointer;\r\n    color: black;\r\n  }\r\n  .simple-keyboard {\r\n    position: absolute;\r\n    top: 56px;\r\n    width: 850px;\r\n  }\r\n`;\r\n\r\n// https://hodgef.com/simple-keyboard/getting-started/react/ 참조(documentation / layout)\r\n// 콘솔 창의 SimpleKeyboardInstances 참조\r\n// caps Lock, Shift, enter 제어\r\n// 혹은 키보드를 새로 만들기...\r\n\r\nconst HeaderSearchKeyboard = ({\r\n  setValue = () => {},\r\n  virtualKeyboardInput = \"\",\r\n  setVirtualKeyboardInput = () => {},\r\n  showVirtualKeyboard = false,\r\n  setShowVirtualKeyboard = () => {},\r\n}) => {\r\n  const onClickBtn = () => {\r\n    // console.log(showKeyBoard);\r\n    setShowVirtualKeyboard(!showVirtualKeyboard);\r\n    showVirtualKeyboard\r\n      ? setVirtualKeyboardInput(virtualKeyboardInput)\r\n      : setVirtualKeyboardInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <HeaderSearchFormKeyboard>\r\n      {showVirtualKeyboard ? (\r\n        <VirtualKeyboard\r\n          setValue={setValue}\r\n          virtualKeyboardInput={virtualKeyboardInput}\r\n          setVirtualKeyboardInput={setVirtualKeyboardInput}\r\n          setShowVirtualKeyboard={setShowVirtualKeyboard}\r\n        />\r\n      ) : null}\r\n      <i className=\"far fa-keyboard\" onClick={onClickBtn}></i>\r\n    </HeaderSearchFormKeyboard>\r\n  );\r\n};\r\n\r\nexport default HeaderSearchKeyboard;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderSearchBtn from \"./headerSearchBtn/HeaderSearchBtn\";\r\nimport HeaderSearchKeyboard from \"./headerSearchKeyboard/HeaderSearchKeyboard\";\r\nimport VideoData from \"../../../../DB/VideoData.json\";\r\n\r\nconst HeaderSearchFormWrap = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  border: solid 1.5px hsl(0, 0%, 80%);\r\n  padding-left: 4px;\r\n  margin-left: 40px;\r\n  position: reltive;\r\n`;\r\n\r\nconst HeaderSearchFormBar = styled.div`\r\n  width: 100%;\r\n  max-width: 575;\r\n  display: flex;\r\n  position: relative;\r\n  .search_input {\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst HeaderSearchFormMatchedBox = styled.ol`\r\n  width: calc(100% + 5px);\r\n  padding: 8px 0 0 4px;\r\n  background-color: white;\r\n  position: absolute;\r\n  border: solid 1px hsl(0, 0%, 80%);\r\n  top: 120%;\r\n  left: -5px;\r\n  li {\r\n    margin: 4px 12px 8px 8px;\r\n    padding: 2px;\r\n    :hover {\r\n      cursor: pointer;\r\n      background-color: var(--hover-bg-color);\r\n    }\r\n  }\r\n`;\r\n\r\nconst HeaderSearchForm = ({\r\n  value = \"\",\r\n  setValue = () => {},\r\n  setSearchedByKeyword = () => {},\r\n}) => {\r\n  const [matchedList, setMatchedList] = useState([]);\r\n  const [virtualKeyboardInput, setVirtualKeyboardInput] = useState(\"\");\r\n  const [showVirtualKeyboard, setShowVirtualKeyboard] = useState(false);\r\n  // console.log(\"와! 여기까지 왔다\", virtualKeyboardInput);\r\n\r\n  const onChangeInput = (e) => {\r\n    setValue(e.target.value);\r\n    // console.log(VideoData.videos);\r\n  };\r\n\r\n  const findMatches = (word, videos) => {\r\n    return videos.filter((video) => {\r\n      const regex = new RegExp(word, \"gi\");\r\n      return video.mainTitle.match(regex);\r\n    });\r\n  };\r\n\r\n  const showMatchedList = () => {\r\n    // console.log(e.target.value);\r\n    const macthedVideos = findMatches(value, VideoData.videos);\r\n    // console.log(value);\r\n    // console.log(macthedVideos);\r\n    const titleOfMatchedVideo = macthedVideos.map((video) => {\r\n      return video.mainTitle;\r\n    });\r\n    setMatchedList(titleOfMatchedVideo);\r\n  };\r\n  // console.log(value);\r\n\r\n  const onClickMatchedTitle = (e) => {\r\n    // console.log(e.target.innerText);\r\n    setValue(e.target.innerText);\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    // console.log(macthedVideos);\r\n    const macthedVideos = findMatches(value, VideoData.videos);\r\n    setSearchedByKeyword(macthedVideos);\r\n    setMatchedList([]);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <HeaderSearchFormWrap onSubmit={onSubmitForm}>\r\n      <HeaderSearchFormBar>\r\n        <input\r\n          placeholder=\"검색\"\r\n          className=\"search_input\"\r\n          value={showVirtualKeyboard ? virtualKeyboardInput : value}\r\n          onChange={onChangeInput}\r\n          onKeyUp={showMatchedList}\r\n        />\r\n        <HeaderSearchFormMatchedBox\r\n          className={\r\n            matchedList.length === 0 ||\r\n            matchedList.length === VideoData.videos.length\r\n              ? \"display__off\"\r\n              : \"display__on\"\r\n          }\r\n        >\r\n          {matchedList.map((match) => {\r\n            return <li onClick={onClickMatchedTitle}>{match}</li>;\r\n          })}\r\n        </HeaderSearchFormMatchedBox>\r\n        <HeaderSearchKeyboard\r\n          onChange={showMatchedList}\r\n          setValue={setValue}\r\n          showVirtualKeyboard={showVirtualKeyboard}\r\n          setShowVirtualKeyboard={setShowVirtualKeyboard}\r\n          virtualKeyboardInput={virtualKeyboardInput}\r\n          setVirtualKeyboardInput={setVirtualKeyboardInput}\r\n        />\r\n      </HeaderSearchFormBar>\r\n      <HeaderSearchBtn />\r\n    </HeaderSearchFormWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderSearchForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\n\r\nconst HeaderSearchMicWrap = styled.div`\r\n  /* width: calc(40px - 20px);\r\n  height: calc(40px - 20px); */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: hsl(0, 0%, 96%);\r\n  border-radius: 100%;\r\n  padding: 8px;\r\n  margin-left: 8px;\r\n  color: hsl(0, 0%, 38%);\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  :active {\r\n    background-color: var(--hover-bg-color);\r\n  }\r\n  :hover .globalBlackExplanation {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst HeaderSearchMic = ({ setValue = () => {} }) => {\r\n  const { listen, listening, stop } = useSpeechRecognition({\r\n    onResult: (result) => {\r\n      setValue(result);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <HeaderSearchMicWrap\r\n      className=\"globalIconBtn\"\r\n      onMouseDown={listen}\r\n      onMouseUp={stop}\r\n    >\r\n      <i className=\"fas fa-microphone\"></i>\r\n      <div className=\"globalBlackExplanation\">\r\n        {listening ? \"음성 인식 중\" : \"음성으로 검색\"}\r\n      </div>\r\n    </HeaderSearchMicWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderSearchMic;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderSearchForm from \"./headerSearchForm/HeaderSearchForm\";\r\nimport HeaderSearchMic from \"./headerSearchMic/HeaderSearchMic\";\r\n\r\nconst HeaderSearchWrap = styled.div`\r\n  flex: 0 1 728px;\r\n  min-width: 320px;\r\n  height: inherit;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderSearch = ({ setSearchedByKeyword = () => {} }) => {\r\n  const [value, setValue] = useState();\r\n  // console.log(value);\r\n  return (\r\n    <HeaderSearchWrap>\r\n      <HeaderSearchForm\r\n        value={value}\r\n        setValue={setValue}\r\n        setSearchedByKeyword={setSearchedByKeyword}\r\n      />\r\n      <HeaderSearchMic setValue={setValue} />\r\n    </HeaderSearchWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderSearch;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderUserInfoDetailsAccountWrap = styled.div`\r\n  width: 100%;\r\n  height: 217px;\r\n  padding: 8px 0;\r\n  border-bottom: 1px solid hsl(0, 0%, 80%);\r\n  background-color: white;\r\n`;\r\n\r\nconst HeaderUserInfoDetailsAccount = () => {\r\n  return (\r\n    <HeaderUserInfoDetailsAccountWrap className=\"globalItemsWrap\">\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-user-circle\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">내 채널</div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-dollar-sign\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">구매 항목 및 멤버십</div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-cog\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">GyuTube 스튜디오</div>\r\n      </div>\r\n      <div className=\"globalItemBar  with_arrow\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-sync-alt\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">계정 전환</div>\r\n        <div className=\"arrow\">\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-external-link-alt\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">로그아웃</div>\r\n      </div>\r\n    </HeaderUserInfoDetailsAccountWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderUserInfoDetailsAccount;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderUserInfoCircle = styled.div`\r\n  /* 개인정보 창 */\r\n  width: calc(36px - 0px);\r\n  height: calc(36px - 2px);\r\n  padding-bottom: 4px;\r\n  border-radius: 100%;\r\n  background-color: hsl(40, 91%, 60%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  position: relative;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  :active {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst HeaderUserInfoIcon = ({\r\n  willBeShown = false,\r\n  setWillBeShown = () => {},\r\n}) => {\r\n  const onClickBtn = () => {\r\n    setWillBeShown(!willBeShown);\r\n  };\r\n\r\n  return (\r\n    <HeaderUserInfoCircle\r\n      className=\"usericon bigger__icon\"\r\n      onClick={onClickBtn}\r\n    >\r\n      Gyu\r\n    </HeaderUserInfoCircle>\r\n  );\r\n};\r\n\r\nexport default HeaderUserInfoIcon;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderUserInfoIcon from \"../../HeaderUserInfoIcon\";\r\n\r\nconst HeaderUserInfoDetailsHeaderWrap = styled.div`\r\n  width: 298px;\r\n  height: 83px;\r\n  padding: 16px;\r\n  border-bottom: 1px solid hsl(0, 0%, 80%);\r\n  display: flex;\r\n  background-color: white;\r\n`;\r\n\r\nconst ManagingAccountBox = styled.div`\r\n  margin-left: 16px;\r\n`;\r\n\r\nconst UserNameBox = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 8px;\r\n`;\r\nconst UserAccount = styled.a`\r\n  font-size: 14px;\r\n  color: hsl(214, 71%, 66%);\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst HeaderUserInfoDetailsHeader = () => {\r\n  return (\r\n    <HeaderUserInfoDetailsHeaderWrap>\r\n      <HeaderUserInfoIcon />\r\n      <ManagingAccountBox>\r\n        <UserNameBox>김승규</UserNameBox>\r\n        <UserAccount>Gyugle 계정 관리</UserAccount>\r\n      </ManagingAccountBox>\r\n    </HeaderUserInfoDetailsHeaderWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderUserInfoDetailsHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderUserInfoDetailsModeWrap = styled.div`\r\n  width: 100%;\r\n  height: 56px;\r\n  padding: 8px 0;\r\n  background-color: white;\r\n  border-bottom: 1px solid hsl(0, 0%, 80%);\r\n`;\r\n\r\nconst HeaderUserInfoDetailsMode = () => {\r\n  return (\r\n    <HeaderUserInfoDetailsModeWrap>\r\n      <div className=\"globalItemBar with_arrow\">\r\n        <div className=\"globalTextBar mode\">제한 모드: 사용 안함</div>\r\n        <div className=\"arrow\">\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      </div>\r\n    </HeaderUserInfoDetailsModeWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderUserInfoDetailsMode;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderUserInfoSettingsWrap = styled.div`\r\n  width: 100%;\r\n  height: 337px;\r\n  padding: 8px 0;\r\n  border-bottom: 1px solid hsl(0, 0%, 80%);\r\n  background-color: white;\r\n`;\r\n\r\nconst HeaderUserInfoDetailsSettings = () => {\r\n  const [isDark, setIsDark] = useState(false);\r\n  const [clickDesign, setClickDesign] = useState(false);\r\n  const handleTheme = () => {\r\n    setClickDesign(!clickDesign);\r\n  };\r\n  return (\r\n    <HeaderUserInfoSettingsWrap>\r\n      <div className=\"globalItemBar with_arrow\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"far fa-moon\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\" onClick={handleTheme}>\r\n          디자인: {isDark ? \"어두운\" : \"밝은\"} 테마\r\n        </div>\r\n        <div className=\"arrow\">\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"globalItemBar with_arrow\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-language\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">언어: 한국어</div>\r\n        <div className=\"arrow\">\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"globalItemBar with_arrow\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-globe\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">위치: 한국</div>\r\n        <div className=\"arrow\">\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-cog\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">설정</div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-user-shield\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">GyuTube의 내 데이터</div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"far fa-question-circle\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">고객센터</div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"fas fa-exclamation\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">의견 보내기</div>\r\n      </div>\r\n      <div className=\"globalItemBar\">\r\n        <div className=\"globalIconBtn globalIconWrap\">\r\n          <i className=\"far fa-keyboard\"></i>\r\n        </div>\r\n        <div className=\"globalTextBar\">단축키</div>\r\n      </div>\r\n    </HeaderUserInfoSettingsWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderUserInfoDetailsSettings;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderUserInfoDetailsAccount from \"./headerUserInfoDetailsAccount/HeaderUserInfoDetailsAccount\";\r\nimport HeaderUserInfoDetailsHeader from \"./headerUserInfoDetailsHeader/HeaderUserInfoDetailsHeader\";\r\nimport HeaderUserInfoDetailsMode from \"./headerUserInfoDetailsMode/HeaderUserInfoDetailsMode\";\r\nimport HeaderUserInfoDetailsSettings from \"./headerUserInfoDetailsSettings/HeaderUserInfoDetailsSettings\";\r\n\r\nconst HeaderUserInfoDetailsWrap = styled.div`\r\n  width: 300px;\r\n  height: 694px;\r\n  border: 1px solid hsl(0, 0%, 80%);\r\n  position: absolute;\r\n  top: 56px;\r\n  /* right 위치 조정 필요함 */\r\n  right: 40px;\r\n  .bigger__icon {\r\n    width: calc(40px - 0px);\r\n    height: calc(40px - 2px);\r\n    padding-bottom: 4px;\r\n    :hover {\r\n      cursor: unset;\r\n    }\r\n    :active {\r\n      transform: none;\r\n    }\r\n  }\r\n  .globalItemBar {\r\n    padding: 0 36px 0 16px;\r\n  }\r\n  .with_arrow {\r\n    padding-right: 20px;\r\n  }\r\n  .globalIconBtn {\r\n    font-size: 22px;\r\n    margin-right: 16px;\r\n  }\r\n  .globalIconBtn:active {\r\n    background-color: var(--active-bg-color);\r\n  }\r\n  .globalTextBar {\r\n    width: 206px;\r\n    font-size: 14px;\r\n  }\r\n  .arrow {\r\n    font-size: 18px;\r\n    color: hsl(0, 0%, 38%);\r\n  }\r\n  .mode {\r\n    margin-right: 56px;\r\n  }\r\n`;\r\n\r\nconst HeaderUserInfoDetailsItemsWrap = styled.div`\r\n  max-height: 611px;\r\n  height: calc(100vh - 56px - 83px);\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst HeaderUserInfoDetails = ({ willBeShown }) => {\r\n  return (\r\n    <HeaderUserInfoDetailsWrap\r\n      className={willBeShown ? \"display__on\" : \"display__off\"}\r\n    >\r\n      <HeaderUserInfoDetailsHeader />\r\n      <HeaderUserInfoDetailsItemsWrap>\r\n        <HeaderUserInfoDetailsAccount />\r\n        <HeaderUserInfoDetailsSettings />\r\n        <HeaderUserInfoDetailsMode />\r\n      </HeaderUserInfoDetailsItemsWrap>\r\n    </HeaderUserInfoDetailsWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderUserInfoDetails;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderUserInfoDetails from \"./headerUserInfoDetails/HeaderUserInfoDetails\";\r\nimport HeaderUserInfoIcon from \"./HeaderUserInfoIcon\";\r\n\r\nconst HeaderUserInfoWrap = styled.div`\r\n  width: 60px;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderUserInfo = () => {\r\n  const [willBeShown, setWillBeShown] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <HeaderUserInfoWrap>\r\n        {/* 서버 연결 후 로그인 ID로 바꾸기 */}\r\n\r\n        <HeaderUserInfoIcon\r\n          willBeShown={willBeShown}\r\n          setWillBeShown={setWillBeShown}\r\n        />\r\n      </HeaderUserInfoWrap>\r\n      <HeaderUserInfoDetails willBeShown={willBeShown} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderUserInfo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledIcon = styled.i`\r\n  margin-right: 8px;\r\n  :hover .globalBlackExplanation {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst HeaderAddVideo = () => {\r\n  return (\r\n    <StyledIcon className=\"globalIconBtn\">\r\n      <i className=\"fas fa-video\"></i>\r\n      <div className=\"globalBlackExplanation\">만들기</div>\r\n    </StyledIcon>\r\n  );\r\n};\r\n\r\nexport default HeaderAddVideo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledIcon = styled.i`\r\n  margin-right: 8px;\r\n  :hover .globalBlackExplanation {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst HeaderBtnsMenu = () => {\r\n  return (\r\n    <StyledIcon className=\"globalIconBtn\">\r\n      <i className=\"fas fa-th\"></i>\r\n      <div className=\"globalBlackExplanation\">GyuTube 앱</div>\r\n    </StyledIcon>\r\n  );\r\n};\r\n\r\nexport default HeaderBtnsMenu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledIcon = styled.i`\r\n  margin-right: 8px;\r\n  :hover .globalBlackExplanation {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst HeaderBtnsAlarm = () => {\r\n  return (\r\n    <StyledIcon className=\"globalIconBtn\">\r\n      <i className=\"fas fa-bell\"></i>\r\n      <div className=\"globalBlackExplanation\">알림</div>\r\n    </StyledIcon>\r\n  );\r\n};\r\n\r\nexport default HeaderBtnsAlarm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderUserInfo from \"./headerUserInfo/HeaderUserInfo\";\r\nimport HeaderAddVideo from \"./headerBtnsAddVideo/HeaderAddVideo\";\r\nimport HeaderBtnsMenu from \"./headerBtnsMenu/HeaderBtnsMenu\";\r\nimport HeaderBtnsAlarm from \"./headerBtnsAlarm/HeaderBtnsAlarm\";\r\n\r\n// 우측 버튼 배치\r\nconst HeaderBtnsWrap = styled.div`\r\n  min-width: 225px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderBtns = () => {\r\n  return (\r\n    <HeaderBtnsWrap>\r\n      <HeaderAddVideo />\r\n      <HeaderBtnsMenu />\r\n      <HeaderBtnsAlarm />\r\n      <HeaderUserInfo />\r\n    </HeaderBtnsWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderBtns;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderLogo from \"./headerLogo/HeaderLogo\";\r\nimport HeaderSearch from \"./headerSearch/HeaderSearch\";\r\nimport HeaderBtns from \"./headerBtns/HeaderBtns\";\r\n\r\nconst HeaderStyle = styled.header`\r\n  width: 100%;\r\n  height: 56px;\r\n  padding-left: 16px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0px;\r\n  left: 0px;\r\n  background-color: white;\r\n`;\r\n\r\nconst Header = ({ setSearchedByKeyword = () => {} }) => {\r\n  return (\r\n    <HeaderStyle>\r\n      <HeaderLogo setSearchedByKeyword={setSearchedByKeyword} />\r\n      <HeaderSearch setSearchedByKeyword={setSearchedByKeyword} />\r\n      <HeaderBtns />\r\n    </HeaderStyle>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavigatorCompassWrap = styled.div`\r\n  width: inherit;\r\n  height: 74px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  div {\r\n    margin-top: 6px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst NavigatorCompass = ({\r\n  isSelected = \"Home\",\r\n  setIsSelected = () => {},\r\n}) => {\r\n  const onClickCompass = () => {\r\n    setIsSelected(\"Compass\");\r\n  };\r\n  return (\r\n    <NavigatorCompassWrap\r\n      className={`globalIconBtnRect ${\r\n        isSelected === \"Compass\" ? \"selected\" : null\r\n      }`}\r\n      onClick={onClickCompass}\r\n    >\r\n      <i className=\"fas fa-compass\"></i>\r\n      <div className=\"text\">탐색</div>\r\n    </NavigatorCompassWrap>\r\n  );\r\n};\r\n\r\nexport default NavigatorCompass;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavigatorHomeWrap = styled.div`\r\n  width: inherit;\r\n  height: 74px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  div {\r\n    margin-top: 6px;\r\n    font-size: 10px;\r\n  }\r\n  /* background-color: inherit;\r\n  :hover {\r\n    background-color: var(--hover-bg-color);\r\n  }\r\n  :active {\r\n    background-color: var(--active-bg-color);\r\n  } */\r\n`;\r\n\r\nconst NavigatorHome = ({ isSelected = \"Home\", setIsSelected = () => {} }) => {\r\n  const onClickHome = () => {\r\n    setIsSelected(\"Home\");\r\n  };\r\n  return (\r\n    <NavigatorHomeWrap\r\n      className={`globalIconBtnRect ${\r\n        isSelected === \"Home\" ? \"selected\" : null\r\n      }`}\r\n      onClick={onClickHome}\r\n    >\r\n      <i className=\"fas fa-home\"></i>\r\n      <div className=\"text\">홈</div>\r\n    </NavigatorHomeWrap>\r\n  );\r\n};\r\n\r\nexport default NavigatorHome;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavigatorSubscriptionWrap = styled.div`\r\n  width: inherit;\r\n  height: 74px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  div {\r\n    margin-top: 6px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst NavigatorSubscription = ({\r\n  isSelected = \"Home\",\r\n  setIsSelected = () => {},\r\n}) => {\r\n  const onClickSubscription = () => {\r\n    setIsSelected(\"Subscription\");\r\n  };\r\n  return (\r\n    <NavigatorSubscriptionWrap\r\n      className={`globalIconBtnRect ${\r\n        isSelected === \"Subscription\" ? \"selected\" : null\r\n      }`}\r\n      onClick={onClickSubscription}\r\n    >\r\n      <i className=\"fas fa-layer-group\"></i>\r\n      <div className=\"text\">구독</div>\r\n    </NavigatorSubscriptionWrap>\r\n  );\r\n};\r\n\r\nexport default NavigatorSubscription;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavigatorStorageWrap = styled.div`\r\n  width: inherit;\r\n  height: 74px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  div {\r\n    margin-top: 6px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nconst NavigatorStorage = ({\r\n  isSelected = \"Home\",\r\n  setIsSelected = () => {},\r\n}) => {\r\n  const onClickStorage = () => {\r\n    setIsSelected(\"Storage\");\r\n  };\r\n  return (\r\n    <NavigatorStorageWrap\r\n      className={`globalIconBtnRect ${\r\n        isSelected === \"Storage\" ? \"selected\" : null\r\n      }`}\r\n      onClick={onClickStorage}\r\n    >\r\n      <i className=\"fas fa-clone\"></i>\r\n      <div className=\"text\">보관함</div>\r\n    </NavigatorStorageWrap>\r\n  );\r\n};\r\n\r\nexport default NavigatorStorage;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavigatorCompass from \"./navigatorCompass/NavigatorCompass\";\r\nimport NavigatorHome from \"./navigatorHome/NavigatorHome\";\r\nimport NavigatorSubscription from \"./navigatorSubscription/NavigatorSubscription\";\r\nimport NavigatorStorage from \"./navigatorStorage/NavigatorStorage\";\r\n\r\nconst NavigatorWrap = styled.aside`\r\n  width: 72px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  position: fixed;\r\n  top: 56px;\r\n  left: 0;\r\n  background-color: white;\r\n\r\n  @media ${(props) => props.theme.mobile} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Navigator = () => {\r\n  const [isSelected, setIsSelected] = useState(\"Home\");\r\n  return (\r\n    <NavigatorWrap>\r\n      <NavigatorHome isSelected={isSelected} setIsSelected={setIsSelected} />\r\n      <NavigatorCompass isSelected={isSelected} setIsSelected={setIsSelected} />\r\n      <NavigatorSubscription\r\n        isSelected={isSelected}\r\n        setIsSelected={setIsSelected}\r\n      />\r\n      <NavigatorStorage isSelected={isSelected} setIsSelected={setIsSelected} />\r\n    </NavigatorWrap>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","import React, { useState } from \"react\";\r\nimport ContentsBox from \"./contentsComponent/ContentsBox\";\r\nimport Header from \"./headerComponents/Header\";\r\nimport Navigator from \"./navigatorComponents/Navigator\";\r\nimport app from \"../styles/app.css\";\r\nimport styled from \"styled-components\";\r\nimport VideoData from \"../DB/VideoData.json\";\r\n\r\nconst StyledPage = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst Main = () => {\r\n  const [searchedByKeyword, setSearchedByKeyword] = useState([]);\r\n  const videoData =\r\n    searchedByKeyword.length === 0 ? VideoData.videos : searchedByKeyword;\r\n  // console.log(\"메인\", videoData);\r\n  // console.log(searchedByKeyword);\r\n  return (\r\n    <StyledPage>\r\n      <Header setSearchedByKeyword={setSearchedByKeyword} />\r\n      <Navigator />\r\n      <ContentsBox key={videoData.videoNo} videoData={videoData} />\r\n    </StyledPage>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HashTagStyle = styled.a`\r\n  font-size: 12px;\r\n  color: hsl(215, 95%, 44%);\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst VideoTitle = ({ mainTitle = \"\", hashtags = \"\" }) => {\r\n  // console.log(\"메인 타이틀 받는 곳!\", mainTitle, \"해시태그\", hashtags);\r\n  return (\r\n    <>\r\n      {hashtags.map((tag) => (\r\n        <HashTagStyle key={tag}> {tag}</HashTagStyle>\r\n      ))}\r\n      <div>{mainTitle}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoTitle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ReportAndScriptsWrap = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-left: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ReportAndScripts = () => {\r\n  return (\r\n    <ReportAndScriptsWrap className=\"globalIconBtn\">\r\n      <i className=\"fas fa-ellipsis-h\"></i>\r\n    </ReportAndScriptsWrap>\r\n  );\r\n};\r\n\r\nexport default ReportAndScripts;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReportAndScripts from \"./reportAndScripts/ReportAndScripts\";\r\n\r\nconst VideoBtnsWrap = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 350.75px;\r\n`;\r\n\r\nconst BtnsBox = styled.div`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n`;\r\n\r\nconst BtnWrap = styled.div`\r\n  margin-left: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  :hover .globalBlackExplanation {\r\n    display: block;\r\n    left: 10px;\r\n  }\r\n`;\r\n\r\nconst IconsWrap = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n  display: flex;\r\n  .globalBlackExplanation {\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst LikeLine = styled.span`\r\n  position: absolute;\r\n  height: 1px;\r\n  width: 140%;\r\n  border: 2px solid hsl(0, 0%, 40%);\r\n  top: 46px;\r\n  left: -6px;\r\n`;\r\n\r\nconst VideoBtns = ({ videoThumbUp = \"\", videoThumbDown = \"\" }) => {\r\n  const setNumFormat = (number) => {\r\n    const num = parseInt(number);\r\n    if (num < 1000) {\r\n      return num;\r\n    } else if (num < 10000) {\r\n      return number[1] === \"0\"\r\n        ? `${number[0]}천`\r\n        : `${number[0]}.${number[1]}천`;\r\n    } else {\r\n      return `${number[0]}.${number[1]}만`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VideoBtnsWrap>\r\n      <BtnsBox>\r\n        <BtnWrap>\r\n          <IconsWrap className=\"globalIconBtn \">\r\n            <i className=\"fas fa-thumbs-up \"></i>\r\n            <div className=\"globalBlackExplanation\">\r\n              이 동영상이 마음에 듭니다.\r\n            </div>\r\n            <LikeLine />\r\n          </IconsWrap>\r\n          <div>{setNumFormat(videoThumbUp)}</div>\r\n        </BtnWrap>\r\n        <BtnWrap>\r\n          <IconsWrap className=\"globalIconBtn \">\r\n            <i className=\"fas fa-thumbs-down \"></i>\r\n            <div className=\"globalBlackExplanation\">\r\n              이 동영상이 마음에 들지 않습니다.\r\n            </div>\r\n            <LikeLine />\r\n          </IconsWrap>\r\n          <div>{setNumFormat(videoThumbDown)}</div>\r\n        </BtnWrap>\r\n        <BtnWrap>\r\n          <IconsWrap className=\"globalIconBtn \">\r\n            <i className=\"fas fa-share \"></i>\r\n            <div className=\"globalBlackExplanation\">공유</div>\r\n          </IconsWrap>\r\n          <div className=\"\">공유</div>\r\n        </BtnWrap>\r\n        <BtnWrap>\r\n          <IconsWrap className=\"globalIconBtn\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n            <div className=\"globalBlackExplanation\">저장</div>\r\n          </IconsWrap>\r\n          <div>저장</div>\r\n        </BtnWrap>\r\n      </BtnsBox>\r\n      <ReportAndScripts />\r\n    </VideoBtnsWrap>\r\n  );\r\n};\r\n\r\nexport default VideoBtns;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ViewAndDateWrap = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst ViewAndDate = ({ videoViews = \"\", videoUploadDate = \"\" }) => {\r\n  const setComma = () => {\r\n    return parseInt(videoViews).toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <ViewAndDateWrap>\r\n      <div>조회수 {setComma()}회</div>\r\n      <span>・</span>\r\n      <div>{videoUploadDate}</div>\r\n    </ViewAndDateWrap>\r\n  );\r\n};\r\n\r\nexport default ViewAndDate;\r\n","import React from \"react\";\r\nimport VideoBtns from \"./videoDetails/VideoBtns\";\r\nimport ViewAndDate from \"./videoDetails/ViewAndDate\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VideoInfoWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 40px;\r\n  color: hsl(0, 0%, 40%);\r\n  .fas {\r\n    color: hsl(0, 0%, 56%);\r\n  }\r\n  @media ${(props) => props.theme.tablet} {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst VideoInfo = ({\r\n  videoViews = \"\",\r\n  videoUploadDate = \"\",\r\n  videoThumbUp = \"\",\r\n  videoThumbDown = \"\",\r\n}) => {\r\n  // console.log(\"비디오정보\", videoViews, videoUploadDate);\r\n  return (\r\n    <VideoInfoWrap>\r\n      <ViewAndDate videoViews={videoViews} videoUploadDate={videoUploadDate} />\r\n      <VideoBtns videoThumbUp={videoThumbUp} videoThumbDown={videoThumbDown} />\r\n    </VideoInfoWrap>\r\n  );\r\n};\r\n\r\nexport default VideoInfo;\r\n","import React, { useState } from \"react\";\r\nimport UserIcon from \"../../../../contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/UserIcon\";\r\nimport styled from \"styled-components\";\r\nimport UserData from \"../../../../../DB/UserData.json\";\r\n\r\nconst VideoUploaderWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 16px;\r\n  margin: 0 0 12px 12px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst ProfileWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  div {\r\n    margin-top: 0;\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nconst Author = styled.div`\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CertificationMark = styled.div`\r\n  .fas {\r\n    margin-left: 4px;\r\n    width: 13px;\r\n    height: 13px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst Subscriber = styled.div`\r\n  font-size: 13px;\r\n  color: hsl(0, 0%, 40%);\r\n`;\r\n\r\nconst SubscriptionWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst SubscriptionBtn = styled.div`\r\n  box-sizing: content-box;\r\n  height: 20px;\r\n  padding: 10px 16px;\r\n  margin: 0 4px;\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SubscriptionBtnActive = styled(SubscriptionBtn)`\r\n  width: 40px;\r\n  color: white;\r\n  background-color: red;\r\n`;\r\n\r\nconst SubscriptionBtnInactive = styled(SubscriptionBtn)`\r\n  width: 42px;\r\n  color: hsl(0, 0%, 38%);\r\n  background-color: hsl(0, 0%, 90%);\r\n`;\r\n\r\nconst SubscriptionAlarm = styled.div`\r\n  width: 38px;\r\n  height: 38px;\r\n  color: hsl(0, 0%, 38%);\r\n`;\r\n\r\nconst VideoUploader = ({ willBeSent = {} }) => {\r\n  const [subscription, setSubscription] = useState(false);\r\n\r\n  const user = UserData.users.find((user) => user.userId === willBeSent.userId);\r\n\r\n  const setSubscribersNumber = () => {\r\n    if (user.subscriber.length < 1000) {\r\n      return user.subscriber.length;\r\n    } else if (user.subscriber.length < 10000) {\r\n      return `${user.subscriber.length\r\n        .toLocaleString(\"de-DE\")\r\n        .toString()\r\n        .substring(0, 4)}천`;\r\n    } else {\r\n      return `${user.subscriber.length\r\n        .toLocaleString(\"de-DE\")\r\n        .toString()\r\n        .substring(0, 4)}만`;\r\n    }\r\n  };\r\n\r\n  const onClickSubscriptionBtn = () => {\r\n    setSubscription(!subscription);\r\n  };\r\n\r\n  return (\r\n    <VideoUploaderWrap>\r\n      <ProfileWrap>\r\n        <UserIcon videoData={willBeSent} />\r\n        <div>\r\n          <Author>\r\n            {user.userName}\r\n            <CertificationMark>\r\n              <i className=\"fas fa-check-circle\"></i>\r\n            </CertificationMark>\r\n          </Author>\r\n          <Subscriber>구독자 {setSubscribersNumber()}명</Subscriber>\r\n        </div>\r\n      </ProfileWrap>\r\n      <SubscriptionWrap>\r\n        {subscription ? (\r\n          <SubscriptionBtnInactive onClick={onClickSubscriptionBtn}>\r\n            구독중\r\n          </SubscriptionBtnInactive>\r\n        ) : (\r\n          <SubscriptionBtnActive onClick={onClickSubscriptionBtn}>\r\n            구독\r\n          </SubscriptionBtnActive>\r\n        )}\r\n\r\n        {subscription ? (\r\n          <SubscriptionAlarm className=\"globalIconBtn\">\r\n            <i className=\"far fa-bell\"></i>\r\n          </SubscriptionAlarm>\r\n        ) : null}\r\n      </SubscriptionWrap>\r\n    </VideoUploaderWrap>\r\n  );\r\n};\r\n\r\nexport default VideoUploader;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VideoUploaderArticleWrap = styled.div`\r\n  padding-bottom: 16px;\r\n  margin-left: 64px;\r\n  margin-bottom: 24px;\r\n  line-height: 1.7;\r\n  .visible {\r\n    display: block;\r\n  }\r\n  .invisible {\r\n    display: none;\r\n  }\r\n  .FullHeight {\r\n    max-height: 100%;\r\n    overflow: visible;\r\n    /* height: auto; */\r\n  }\r\n`;\r\n\r\nconst ArticleBox = styled.div`\r\n  max-height: 88px;\r\n  height: auto;\r\n  width: 80%;\r\n  margin-bottom: 20px;\r\n  overflow: hidden;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nconst ShowMoreOrLess = styled.div`\r\n  font-size: 13px;\r\n  color: hsl(0, 0%, 40%);\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst VideoUploaderArticle = ({ post = \"\" }) => {\r\n  const [showMore, setShowMore] = useState(false);\r\n  const [showLess, setShowLess] = useState(true);\r\n  const [isFullHeight, setIsFullHeight] = useState(false);\r\n\r\n  const toggleVisiblity = () => {\r\n    setShowMore(!showMore);\r\n    setShowLess(!showLess);\r\n    setIsFullHeight(!isFullHeight);\r\n  };\r\n\r\n  // console.log(post);\r\n  return (\r\n    <VideoUploaderArticleWrap>\r\n      <ArticleBox className={isFullHeight ? \"FullHeight\" : null}>\r\n        {post}\r\n      </ArticleBox>\r\n      <ShowMoreOrLess\r\n        onClick={toggleVisiblity}\r\n        className={showLess ? \"visible\" : \"invisible\"}\r\n      >\r\n        더보기\r\n      </ShowMoreOrLess>\r\n      <ShowMoreOrLess\r\n        onClick={toggleVisiblity}\r\n        className={showMore ? \"visible\" : \"invisible\"}\r\n      >\r\n        간략히\r\n      </ShowMoreOrLess>\r\n    </VideoUploaderArticleWrap>\r\n  );\r\n};\r\n\r\nexport default VideoUploaderArticle;\r\n","import React from \"react\";\r\nimport VideoUploader from \"./videoMetaDetails/VideoUploader\";\r\nimport VideoUploaderArticle from \"./videoMetaDetails/VideoUploaderArticle\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MetaWrap = styled.div`\r\n  border-top: solid 1px hsl(0, 0%, 80%);\r\n  border-bottom: solid 1px hsl(0, 0%, 80%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 12px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst VideoMeta = ({ willBeSent = {} }) => {\r\n  return (\r\n    <MetaWrap>\r\n      <VideoUploader willBeSent={willBeSent} />\r\n      <VideoUploaderArticle post={willBeSent.post} />\r\n    </MetaWrap>\r\n  );\r\n};\r\n\r\nexport default VideoMeta;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PinBox = styled.div`\r\n  color: hsl(0, 0%, 38%);\r\n  height: 18px;\r\n  font-size: 12px;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  .fas {\r\n    width: 16px;\r\n    height: 16px;\r\n    font-size: 10px;\r\n    margin-right: 4px;\r\n    padding-top: 2px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Pinned = ({ willBeSent } = {}) => {\r\n  return (\r\n    <PinBox>\r\n      <i className=\"fas fa-thumbtack\"></i>\r\n      <div>{willBeSent.userName}님이 고정함</div>\r\n    </PinBox>\r\n  );\r\n};\r\n\r\nexport default Pinned;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst IconsWrap = styled.div`\r\n  height: 36px;\r\n  margin-top: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: hsl(0, 0%, 56%);\r\n`;\r\n\r\nconst LikeBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst LikeIcon = styled.div`\r\n  /* 왼쪽으로 4~8px 옮겨야 함... */\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  .globalBlackExplanation {\r\n    white-space: nowrap;\r\n  }\r\n  :hover .globalBlackExplanation {\r\n    display: block;\r\n  }\r\n  .fas {\r\n    color: hsl(0, 0%, 56%);\r\n    font-size: 14px;\r\n    :hover {\r\n      color: hsl(0, 0%, 38%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst LikeNumber = styled.div`\r\n  font-size: 14px;\r\n  color: hsl(0, 0%, 38%);\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst ReplyBox = styled.div`\r\n  width: 66px;\r\n  padding: 8px 16px;\r\n  font-size: 13px;\r\n  color: hsl(0, 0%, 38%);\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CommentLikeBtns = ({ commentThumbUp = \"\", commentThumbDown = \"\" }) => {\r\n  return (\r\n    <IconsWrap>\r\n      <LikeBox>\r\n        <LikeIcon className=\"globalIconBtn\">\r\n          <i className=\"fas fa-thumbs-up\"></i>\r\n          <div className=\"globalBlackExplanation\">좋아요</div>\r\n        </LikeIcon>\r\n        <LikeNumber>{parseInt(commentThumbUp).toLocaleString()}</LikeNumber>\r\n      </LikeBox>\r\n      <LikeBox>\r\n        <LikeIcon className=\"globalIconBtn\">\r\n          <i className=\"fas fa-thumbs-down\"></i>\r\n          <div className=\"globalBlackExplanation\">싫어요</div>\r\n        </LikeIcon>\r\n        <LikeNumber>\r\n          {commentThumbDown && parseInt(commentThumbDown).toLocaleString()}\r\n        </LikeNumber>\r\n      </LikeBox>\r\n      <ReplyBox>답글</ReplyBox>\r\n    </IconsWrap>\r\n  );\r\n};\r\n\r\nexport default CommentLikeBtns;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MenuBox from \"../../../../contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/MenuBox\";\r\nimport UserData from \"../../../../../DB/UserData.json\";\r\nimport UserIcon from \"../../../../contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/UserIcon\";\r\nimport Pinned from \"./pinned/Pinned\";\r\nimport CommentLikeBtns from \"./commentLikeBtns/CommentLikeBtns\";\r\n// import VideoCommentsLeaveComment from \"../videoCommentsLeaveComment/VideoCommentsLeaveComment\";\r\n\r\nconst VideoCommentsContentWrap = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst VideoCommentsContentBox = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst CommentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  :hover .fa-ellipsis-v {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst NameBox = styled.div`\r\n  font-size: 13px;\r\n  display: flex;\r\n`;\r\n\r\nconst DateWrap = styled.div`\r\n  margin-left: 4px;\r\n  color: hsl(0, 0%, 38%);\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n  }\r\n  .fas {\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nconst CommentContent = styled.div`\r\n  width: 100%;\r\n  font-size: 13px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst VideoCommentsContent = ({ commentData = {}, willBeSent = {} }) => {\r\n  // console.log(\"해당 비디오에 작성된 댓글 데이터\", commentData);\r\n  // console.log(\"전체 유저 DB\", UserData.users);\r\n  const users = commentData.map((comment) => comment.userId);\r\n  // console.log(\"전체 유저 중 댓글 쓴 애들의 ID(PK)\", users);\r\n\r\n  const commenters = UserData.users.filter((user) =>\r\n    users.includes(user.userId)\r\n  );\r\n  // console.log(\"전체 유저 중 댓글 쓴 애들의 유저 데이터\", commenters);\r\n\r\n  const setYears = (timeData) => {\r\n    // 현재 날짜\r\n    const now = new Date();\r\n    const thisYear = now.getFullYear();\r\n    const thisMonth = now.getMonth() + 1;\r\n    const today = now.getDate();\r\n\r\n    // 업로드 날짜\r\n    const commentYear = parseInt(timeData.split(\".\")[0]);\r\n    const commentMonth = parseInt(timeData.split(\".\")[1]);\r\n    const commentDate = parseInt(timeData.split(\".\")[2]);\r\n\r\n    const yearGap = thisYear - commentYear;\r\n    const monthGap = thisMonth - commentMonth;\r\n    const dateGap = today - commentDate;\r\n\r\n    return yearGap >= 1\r\n      ? `${yearGap}년 `\r\n      : monthGap >= 1\r\n      ? `${monthGap}개월 `\r\n      : `${dateGap}일 `;\r\n  };\r\n\r\n  return (\r\n    <VideoCommentsContentWrap>\r\n      {commenters.map((commenter) => {\r\n        // console.log(commenter);\r\n        return (\r\n          <VideoCommentsContentBox>\r\n            {commentData\r\n              .filter((comment) => comment.userId === commenter.userId)\r\n              .map((comment) => {\r\n                return (\r\n                  <>\r\n                    <UserIcon willBeSent={willBeSent} commenters={commenter} />\r\n                    <CommentWrap>\r\n                      {comment.commentPinned ? (\r\n                        <Pinned willBeSent={willBeSent} />\r\n                      ) : null}\r\n                      <NameBox>\r\n                        <div>{commenter.userName}</div>\r\n                        <DateWrap>\r\n                          <i className=\"fas fa-check\"></i>\r\n                          {setYears(comment.commentDate)} 전\r\n                        </DateWrap>\r\n                      </NameBox>\r\n                      <CommentContent>\r\n                        <div>{comment.commentContent}</div>\r\n                      </CommentContent>\r\n                      <CommentLikeBtns\r\n                        commentThumbUp={comment.commentThumbUp}\r\n                        commentThumbDown={comment.commentThumbDown}\r\n                      />\r\n                    </CommentWrap>\r\n                    <MenuBox />\r\n                  </>\r\n                );\r\n              })}\r\n          </VideoCommentsContentBox>\r\n        );\r\n      })}\r\n    </VideoCommentsContentWrap>\r\n  );\r\n};\r\n\r\nexport default VideoCommentsContent;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst VideoCommentsHeaderWrap = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst CommentsNumber = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 32px;\r\n`;\r\n\r\nconst SortBy = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0;\r\n  padding-right: 8px;\r\n  border-radius: 2px;\r\n  transition-duration: 0.5s;\r\n  font-size: 14px;\r\n  position: relative;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  :active {\r\n    background-color: var(--hover-bg-color);\r\n  }\r\n  .fas {\r\n    margin-right: 8px;\r\n  }\r\n  .globalBlackExplanation {\r\n    top: 36px;\r\n  }\r\n`;\r\n\r\nconst VideoCommentsHeader = ({ commentData = {} }) => {\r\n  const [willBeShown, setWillBeShown] = useState(false);\r\n  const showBlackExplanation = () => {\r\n    setWillBeShown(true);\r\n  };\r\n  const hideBlackExplanation = () => {\r\n    setWillBeShown(false);\r\n  };\r\n  const setCommentLenghtFormat = () => {\r\n    return commentData.length.toLocaleString();\r\n  };\r\n  return (\r\n    <VideoCommentsHeaderWrap>\r\n      <CommentsNumber>댓글 {setCommentLenghtFormat()}개</CommentsNumber>\r\n      <SortBy\r\n        onMouseEnter={showBlackExplanation}\r\n        onMouseLeave={hideBlackExplanation}\r\n      >\r\n        <i className=\"fas fa-sort-amount-down\"></i>\r\n        <div\r\n          className={`globalBlackExplanation ${\r\n            willBeShown ? \"display__on\" : \"display__off\"\r\n          }`}\r\n        >\r\n          댓글 정렬\r\n        </div>\r\n        <div>정렬 기준</div>\r\n      </SortBy>\r\n    </VideoCommentsHeaderWrap>\r\n  );\r\n};\r\n\r\nexport default VideoCommentsHeader;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderUserInfo from \"../../../../headerComponents/headerBtns/headerUserInfo/HeaderUserInfo\";\r\n\r\nconst VideoCommentsLeaveCommentWrap = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst InputCommentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 70px;\r\n`;\r\n\r\nconst InputComment = styled.input`\r\n  height: 60px;\r\n  margin-bottom: 3.5px;\r\n  padding-bottom: 4px;\r\n  border: none;\r\n  border-bottom: 1px solid hsl(0, 0%, 56%);\r\n  font-size: 15px;\r\n  background-color: inherit;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n// 이펙트 주고 크기 조절...\r\nconst FocusEffect = styled.span`\r\n  width: 100%;\r\n  height: 1px;\r\n  border: 1px solid black;\r\n  position: relative;\r\n  top: -4px;\r\n  transition-duration: 0.3s;\r\n`;\r\n\r\nconst BtnsWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst CancleBtn = styled.button`\r\n  height: 36px;\r\n  width: 72px;\r\n  padding: 10px 16px;\r\n  margin: 0 4px;\r\n  text-align: center;\r\n  border: none;\r\n  border-radius: 2px;\r\n  background-color: hsl(0, 0%, 98%);\r\n  color: hsl(0, 0%, 40%);\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CommentBtn = styled(CancleBtn)`\r\n  background-color: hsl(0, 0%, 80%);\r\n`;\r\n\r\nconst VideoCommentsLeaveComment = () => {\r\n  const [showEffect, setShowEffect] = useState(false);\r\n  const onFocusEffect = () => {\r\n    setShowEffect(true);\r\n  };\r\n  const onBlurEffect = () => {\r\n    setShowEffect(false);\r\n  };\r\n\r\n  return (\r\n    <VideoCommentsLeaveCommentWrap>\r\n      <HeaderUserInfo />\r\n      <InputCommentWrap>\r\n        <InputComment\r\n          type=\"text\"\r\n          placeholder=\"공개 댓글 추가...\"\r\n          onFocus={onFocusEffect}\r\n          onBlur={onBlurEffect}\r\n        />\r\n        {showEffect ? <FocusEffect /> : null}\r\n        <BtnsWrap>\r\n          <CancleBtn>취소</CancleBtn>\r\n          <CommentBtn>댓글</CommentBtn>\r\n        </BtnsWrap>\r\n      </InputCommentWrap>\r\n    </VideoCommentsLeaveCommentWrap>\r\n  );\r\n};\r\n\r\nexport default VideoCommentsLeaveComment;\r\n","import React from \"react\";\r\nimport VideoCommentsContent from \"./videoCommentsContent/VideoCommentsContent\";\r\nimport VideoCommentsHeader from \"./videoCommentsHeader/VideoCommentsHeader\";\r\nimport VideoCommentsLeaveComment from \"./videoCommentsLeaveComment/VideoCommentsLeaveComment\";\r\nimport styled from \"styled-components\";\r\nimport CommentData from \"../../../../DB/CommentData.json\";\r\n\r\nconst VideoCommentsWrap = styled.div`\r\n  margin: 24px 0 32px 0;\r\n`;\r\n\r\nconst VideoComments = ({ willBeSent = {} }) => {\r\n  // console.log(willBeSent.videoNo);\r\n  const comments = CommentData.comments.filter(\r\n    (comment) => comment.videoNo === willBeSent.videoNo\r\n  );\r\n  // console.log(comments);\r\n  return (\r\n    <VideoCommentsWrap>\r\n      <VideoCommentsHeader commentData={comments} />\r\n      <VideoCommentsLeaveComment />\r\n      <VideoCommentsContent commentData={comments} willBeSent={willBeSent} />\r\n    </VideoCommentsWrap>\r\n  );\r\n};\r\n\r\nexport default VideoComments;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TitleBox from \"../../contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/TitleBox\";\r\nimport VideoData from \"../../../DB/VideoData.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuBox from \"../../contentsComponent/videoBox/videoSummary/videoExplanaion/videoExplanaionDetails/MenuBox\";\r\n\r\nconst NextVideoListWrap = styled.aside`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst NextVideoBoxWrap = styled.div`\r\n  width: 100%;\r\n  height: 94px;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n`;\r\n\r\nconst NextVideoBox = styled.div`\r\n  width: 168px;\r\n  height: 94px;\r\n  margin-right: 8px;\r\n  video {\r\n    width: 166px;\r\n    height: 94px;\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nconst NextVideoExplanation = styled.div`\r\n  width: calc(100% - 176px);\r\n  display: flex;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  :hover .fa-ellipsis-v {\r\n    display: flex;\r\n  }\r\n  .next_vdieo {\r\n    margin-top: 0;\r\n  }\r\n  .globalIconBtn {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nconst NextVideoTitleWrap = styled.div`\r\n  width: calc(100% - 24px);\r\n`;\r\n\r\nconst NextVideoList = ({ willBeSent = {} }) => {\r\n  // console.log(willBeSent);\r\n\r\n  const setCandidates = () => {\r\n    const candidates = [];\r\n    for (let i = 0; i < VideoData.videos.length; i++) {\r\n      candidates.push(i + 1001);\r\n    }\r\n    return candidates;\r\n  };\r\n\r\n  const setRandomNumber = () => {\r\n    const candidates = setCandidates();\r\n    const randomlySorted = [];\r\n    // console.log(randomlySorted);\r\n    // console.log(candidates[VideoData.videos.length - 1]);\r\n    while (true) {\r\n      const chosen =\r\n        candidates[VideoData.videos.length - 1] -\r\n        Math.floor(Math.random() * VideoData.videos.length);\r\n      if (!randomlySorted.includes(chosen)) {\r\n        randomlySorted.push(chosen);\r\n      }\r\n      if (randomlySorted.length === candidates.length) {\r\n        break;\r\n      }\r\n    }\r\n    // console.log(randomlySorted);\r\n    return randomlySorted;\r\n  };\r\n\r\n  const matchVideos = () => {\r\n    const randomlySorted = setRandomNumber();\r\n    // console.log(VideoData.videos);\r\n    // console.log(randomlySorted);\r\n    const matchedVideos = [];\r\n    randomlySorted.forEach((randomNumber) => {\r\n      for (let i = 0; i < VideoData.videos.length; i++) {\r\n        if (randomNumber !== parseInt(willBeSent.videoNo)) {\r\n          if (randomNumber === parseInt(VideoData.videos[i].videoNo)) {\r\n            matchedVideos.push(VideoData.videos[i]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    // console.log(matchedVideos);\r\n    return matchedVideos;\r\n  };\r\n\r\n  const onMouseEnterVideo = (e) => {\r\n    e.target.play();\r\n  };\r\n\r\n  const onMouseOutVideo = (e) => {\r\n    e.target.pause();\r\n    e.target.currentTime = 0;\r\n  };\r\n\r\n  return (\r\n    <NextVideoListWrap>\r\n      {matchVideos().map((video) => {\r\n        // console.log(video);\r\n        return (\r\n          <NextVideoBoxWrap>\r\n            <NextVideoBox>\r\n              <Link to={`/playing/${video.videoNo}/${video.videoTitle}`}>\r\n                <video\r\n                  key={video.videoNo}\r\n                  src={`${process.env.PUBLIC_URL}/videos/${video.videoTitle}.mp4`}\r\n                  onMouseEnter={onMouseEnterVideo}\r\n                  onMouseOut={onMouseOutVideo}\r\n                  muted={true}\r\n                />\r\n              </Link>\r\n            </NextVideoBox>\r\n            <NextVideoExplanation>\r\n              <NextVideoTitleWrap>\r\n                <TitleBox videoData={video} />\r\n              </NextVideoTitleWrap>\r\n              <MenuBox />\r\n            </NextVideoExplanation>\r\n          </NextVideoBoxWrap>\r\n        );\r\n      })}\r\n    </NextVideoListWrap>\r\n  );\r\n};\r\n\r\nexport default NextVideoList;\r\n","import React from \"react\";\r\nimport Header from \"../headerComponents/Header\";\r\nimport styled from \"styled-components\";\r\nimport VideoTitle from \"../playingPage/primaryComponents/videoInfo/VideoTitle\";\r\nimport VideoInfo from \"../playingPage/primaryComponents/videoInfo/VideoInfo\";\r\nimport VideoMeta from \"../playingPage/primaryComponents/videoMeta/VideoMeta\";\r\nimport VideoComments from \"../playingPage/primaryComponents/videoComments/VideoComments\";\r\nimport NextVideoList from \"../playingPage/asideComponents/NextVideoList\";\r\nimport VideoData from \"../../DB/VideoData.json\";\r\n\r\nconst StyledPage = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  width: 100%;\r\n  /* padding-top: 56px; */\r\n  background-color: hsl(0, 0%, 98%);\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledColumnsWrap = styled.div`\r\n  width: calc(100% - 56px - 60px);\r\n  height: 100%;\r\n  background-color: hsl(0, 0%, 98%);\r\n  position: relative;\r\n  top: 56px;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  /* aside */\r\n  aside {\r\n    height: auto;\r\n    flex: 1 1 25%;\r\n    padding: 24px 24px 0 0;\r\n  }\r\n\r\n  @media ${(props) => props.theme.tablet} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst PrimaryWrap = styled.div`\r\n  flex: 1 1 50%;\r\n  padding: 24px 24px 0 0;\r\n  margin-left: 24px;\r\n`;\r\n\r\nconst PlayerWrap = styled.div`\r\n  max-width: 1280px;\r\n  max-height: 720px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\n// 화면이 줄어들면 가로만 좁아짐\r\nconst VideoBox = styled.div`\r\n  width: 100%;\r\n  video {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst InfoWrap = styled.div`\r\n  padding: 20px 0 8px 0;\r\n`;\r\n\r\nconst Playing = ({ match = {} }) => {\r\n  // console.log(match);\r\n  const { params } = match;\r\n  // console.log(\"파람스! \", params.videoNo, params.videoTitle);\r\n  // console.log(\"DB!!!\", VideoData);\r\n\r\n  const willBeSent = VideoData.videos.find(\r\n    (video) => video.videoNo === params.videoNo\r\n  );\r\n  // console.log(willBeSent.videoNo);\r\n\r\n  return (\r\n    <StyledPage>\r\n      <Header />\r\n      <StyledArticle>\r\n        <StyledColumnsWrap>\r\n          <PrimaryWrap>\r\n            <PlayerWrap>\r\n              {/* 경로를 ./으로 하면 안되고 다 지우거나 ../로 하니까 된다. */}\r\n              {/* 리액트 라우터가 마치 url을 이동하고 있는 것 같이 생겼지만 사실은 그냥 컴포넌트 갈아끼워서 페이지 이동한 것 처럼 보이게하는 눈속임 마술을 부리는 새끼라서  */}\r\n              <VideoBox>\r\n                <video\r\n                  src={`${process.env.PUBLIC_URL}/videos/${willBeSent.videoTitle}.mp4`}\r\n                  controls\r\n                />\r\n              </VideoBox>\r\n            </PlayerWrap>\r\n\r\n            <InfoWrap>\r\n              <VideoTitle\r\n                mainTitle={willBeSent.mainTitle}\r\n                hashtags={willBeSent.hashtags}\r\n              />\r\n              <VideoInfo\r\n                videoViews={willBeSent.videoViews}\r\n                videoUploadDate={willBeSent.videoUploadDate}\r\n                videoThumbUp={willBeSent.videoThumbUp}\r\n                videoThumbDown={willBeSent.videoThumbDown}\r\n              />\r\n            </InfoWrap>\r\n\r\n            <VideoMeta willBeSent={willBeSent} />\r\n\r\n            <VideoComments willBeSent={willBeSent} />\r\n          </PrimaryWrap>\r\n          <NextVideoList willBeSent={willBeSent} />\r\n        </StyledColumnsWrap>\r\n      </StyledArticle>\r\n    </StyledPage>\r\n  );\r\n};\r\n\r\nexport default Playing;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  /* 글로벌 텍스트바 */\r\n  .globalItemsWrap {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .globalItemBar {\r\n    height: 40px;\r\n    width: 100%;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    :hover {\r\n      cursor: pointer;\r\n      background-color: var(--hover-bg-color);\r\n    }\r\n    :active {\r\n      background-color: var(--active-bg-color);\r\n    }\r\n  }\r\n  .globalIconWrap {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: 18px;\r\n  }\r\n  .globalTextBar {\r\n    width: 144px;\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n  }\r\n\r\n\r\n  /* 글로벌 설명창 */\r\n  .globalBlackExplanation {\r\n    width: auto;\r\n    padding: 8px 12px;\r\n    position: absolute;\r\n    top: 56px;\r\n    background-color: black;\r\n    color: white;\r\n    opacity: 0.7;\r\n    border-radius: 2px;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    display: none;\r\n  }\r\n  \r\n\r\n  /* 글로벌 디스플레이 on/off */\r\n  .display__on {\r\n    display: block;\r\n  }\r\n  .display__off {\r\n    display: none;\r\n  }\r\n\r\n\r\n  /* 아이콘 선택됐을 때(디폴트) */\r\n  .selected,\r\n  .selected > *,\r\n  .selected > div > * {\r\n    color: red;\r\n    background-color: var(--default-bg-color);\r\n  }\r\n  .selected:hover,\r\n  .selected:hover > *,\r\n  .selected:hover > div > * {\r\n    background-color: var(--hover-bg-color);\r\n  }\r\n  .selected:active,\r\n  .selected:active > *,\r\n  .selected:active > div > * {\r\n    background-color: var(--active-bg-color);\r\n  }\r\n\r\n  /* 글로벌 아이콘 */\r\n  .globalIconBtnRect {\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    color: hsl(0, 0%, 38%);\r\n    :hover {\r\n      cursor: pointer;\r\n      background-color: var(--hover-bg-color);\r\n    }\r\n    :active {\r\n      background-color: var(--active-bg-color);\r\n    }\r\n  }\r\n  .globalIconBtn {\r\n    height: 40px;\r\n    width: 40px;\r\n    border-radius: 100%;\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    color: hsl(0, 0%, 38%);\r\n    :active {\r\n      background-color: hsl(0, 0%, 80%);\r\n    }\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Main from \"./components/Main\";\r\nimport Playing from \"./components/routes/Playing\";\r\nimport GlobalStyle from \"./styles/GlobalStyle\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <GlobalStyle />\r\n      <Route exact path=\"/\" component={Main} />\r\n      <Route path=\"/playing/:videoNo/:videoTitle\" component={Playing} />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const size = {\r\n  // ~767px 모바일\r\n  mobile: \"800px\",\r\n  // 768px~1023px 태블릿\r\n  tablet: \"1024px\",\r\n  // 1024~ 데스크탑\r\n  desktop: \"1800px\",\r\n};\r\n\r\nconst theme = {\r\n  mobile: `(max-width: ${size.mobile})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  desktop: `(max-width: ${size.desktop})`,\r\n};\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"./styles/theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}